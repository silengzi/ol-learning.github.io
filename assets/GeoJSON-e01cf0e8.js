import{F as f}from"./Vector-11367a1e.js";import{c4 as p,a4 as d,a3 as G,E as P,bJ as _,c5 as w,aL as S,z as M,g as m,i as C,P as O,a as F}from"./Layer-cbc2c204.js";import{J as E}from"./JSONFeature-d161b5e6.js";import{L as N}from"./LineString-a31dcfd1.js";import{t as y,M as b,a as k,b as x}from"./MultiPolygon-7dbd278b.js";class c extends p{constructor(e){super(),this.geometries_=e||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(d),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let e=0,t=this.geometries_.length;e<t;++e)this.changeEventsKeys_.push(G(this.geometries_[e],P.CHANGE,this.changed,this))}clone(){const e=new c(null);return e.setGeometries(this.geometries_),e.applyProperties(this),e}closestPointXY(e,t,r,o){if(o<_(this.getExtent(),e,t))return o;const n=this.geometries_;for(let s=0,a=n.length;s<a;++s)o=n[s].closestPointXY(e,t,r,o);return o}containsXY(e,t){const r=this.geometries_;for(let o=0,n=r.length;o<n;++o)if(r[o].containsXY(e,t))return!0;return!1}computeExtent(e){w(e);const t=this.geometries_;for(let r=0,o=t.length;r<o;++r)S(e,t[r].getExtent());return e}getGeometries(){return h(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let e=[];const t=this.geometries_;for(let r=0,o=t.length;r<o;++r)t[r].getType()===this.getType()?e=e.concat(t[r].getGeometriesArrayRecursive()):e.push(t[r]);return e}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||this.simplifiedGeometryMaxMinSquaredTolerance!==0&&e<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=[],r=this.geometries_;let o=!1;for(let n=0,s=r.length;n<s;++n){const a=r[n],l=a.getSimplifiedGeometry(e);t.push(l),l!==a&&(o=!0)}if(o){const n=new c(null);return n.setGeometriesArray(t),n}return this.simplifiedGeometryMaxMinSquaredTolerance=e,this}getType(){return"GeometryCollection"}intersectsExtent(e){const t=this.geometries_;for(let r=0,o=t.length;r<o;++r)if(t[r].intersectsExtent(e))return!0;return!1}isEmpty(){return this.geometries_.length===0}rotate(e,t){const r=this.geometries_;for(let o=0,n=r.length;o<n;++o)r[o].rotate(e,t);this.changed()}scale(e,t,r){r||(r=M(this.getExtent()));const o=this.geometries_;for(let n=0,s=o.length;n<s;++n)o[n].scale(e,t,r);this.changed()}setGeometries(e){this.setGeometriesArray(h(e))}setGeometriesArray(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()}applyTransform(e){const t=this.geometries_;for(let r=0,o=t.length;r<o;++r)t[r].applyTransform(e);this.changed()}translate(e,t){const r=this.geometries_;for(let o=0,n=r.length;o<n;++o)r[o].translate(e,t);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function h(i){const e=[];for(let t=0,r=i.length;t<r;++t)e.push(i[t].clone());return e}const L=c;class j extends E{constructor(e){e=e||{},super(),this.dataProjection=m(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=m(e.featureProjection)),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,t){let r=null;e.type==="Feature"?r=e:r={type:"Feature",geometry:e,properties:null};const o=u(r.geometry,t),n=new f;return this.geometryName_?n.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in r!==void 0&&n.setGeometryName(r.geometry_name),n.setGeometry(o),"id"in r&&n.setId(r.id),r.properties&&n.setProperties(r.properties,!0),n}readFeaturesFromObject(e,t){const r=e;let o=null;if(r.type==="FeatureCollection"){const n=e;o=[];const s=n.features;for(let a=0,l=s.length;a<l;++a)o.push(this.readFeatureFromObject(s[a],t))}else o=[this.readFeatureFromObject(e,t)];return o}readGeometryFromObject(e,t){return u(e,t)}readProjectionFromObject(e){const t=e.crs;let r;if(t)if(t.type=="name")r=m(t.properties.name);else if(t.type==="EPSG")r=m("EPSG:"+t.properties.code);else throw new Error("Unknown SRS type");else r=this.dataProjection;return r}writeFeatureObject(e,t){t=this.adaptOptions(t);const r={type:"Feature",geometry:null,properties:null},o=e.getId();if(o!==void 0&&(r.id=o),!e.hasProperties())return r;const n=e.getProperties(),s=e.getGeometry();return s&&(r.geometry=g(s,t),delete n[e.getGeometryName()]),C(n)||(r.properties=n),r}writeFeaturesObject(e,t){t=this.adaptOptions(t);const r=[];for(let o=0,n=e.length;o<n;++o)r.push(this.writeFeatureObject(e[o],t));return{type:"FeatureCollection",features:r}}writeGeometryObject(e,t){return g(e,this.adaptOptions(t))}}function u(i,e){if(!i)return null;let t;switch(i.type){case"Point":{t=J(i);break}case"LineString":{t=A(i);break}case"Polygon":{t=X(i);break}case"MultiPoint":{t=R(i);break}case"MultiLineString":{t=T(i);break}case"MultiPolygon":{t=K(i);break}case"GeometryCollection":{t=v(i);break}default:throw new Error("Unsupported GeoJSON type: "+i.type)}return y(t,!1,e)}function v(i,e){const t=i.geometries.map(function(r){return u(r,e)});return new L(t)}function J(i){return new O(i.coordinates)}function A(i){return new N(i.coordinates)}function T(i){return new b(i.coordinates)}function R(i){return new k(i.coordinates)}function K(i){return new x(i.coordinates)}function X(i){return new F(i.coordinates)}function g(i,e){i=y(i,!0,e);const t=i.getType();let r;switch(t){case"Point":{r=z(i);break}case"LineString":{r=I(i);break}case"Polygon":{r=B(i,e);break}case"MultiPoint":{r=H(i);break}case"MultiLineString":{r=U(i);break}case"MultiPolygon":{r=$(i,e);break}case"GeometryCollection":{r=Y(i,e);break}case"Circle":{r={type:"GeometryCollection",geometries:[]};break}default:throw new Error("Unsupported geometry type: "+t)}return r}function Y(i,e){return e=Object.assign({},e),delete e.featureProjection,{type:"GeometryCollection",geometries:i.getGeometriesArray().map(function(r){return g(r,e)})}}function I(i,e){return{type:"LineString",coordinates:i.getCoordinates()}}function U(i,e){return{type:"MultiLineString",coordinates:i.getCoordinates()}}function H(i,e){return{type:"MultiPoint",coordinates:i.getCoordinates()}}function $(i,e){let t;return e&&(t=e.rightHanded),{type:"MultiPolygon",coordinates:i.getCoordinates(t)}}function z(i,e){return{type:"Point",coordinates:i.getCoordinates()}}function B(i,e){let t;return e&&(t=e.rightHanded),{type:"Polygon",coordinates:i.getCoordinates(t)}}const D=j;export{D as G,L as a};
