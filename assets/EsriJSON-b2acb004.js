import{F as p}from"./Vector-163f0152.js";import{J as P}from"./JSONFeature-2245ccdf.js";import{L as w}from"./LineString-d3d6f49c.js";import{g as h,aU as O,bf as Z,c0 as G,aO as S,c1 as y,P as f,L as F}from"./Layer-3211d6ef.js";import{a as R,M as N}from"./MultiPolygon-f290964a.js";import{M as L}from"./MultiPoint-e6eff345.js";import{t as d}from"./Feature-5a984f38.js";const Y={Point:J,LineString:C,Polygon:_,MultiPoint:z,MultiLineString:k,MultiPolygon:I},E={Point:T,LineString:v,Polygon:H,MultiPoint:A,MultiLineString:W,MultiPolygon:D};class x extends P{constructor(t){t=t||{},super(),this.geometryName_=t.geometryName}readFeatureFromObject(t,n,r){const s=t,i=m(s.geometry,n),o=new p;if(this.geometryName_&&o.setGeometryName(this.geometryName_),o.setGeometry(i),s.attributes){o.setProperties(s.attributes,!0);const a=s.attributes[r];a!==void 0&&o.setId(a)}return o}readFeaturesFromObject(t,n){if(n=n||{},t.features){const r=t,s=[],i=r.features;for(let o=0,a=i.length;o<a;++o)s.push(this.readFeatureFromObject(i[o],n,t.objectIdFieldName));return s}return[this.readFeatureFromObject(t,n)]}readGeometryFromObject(t,n){return m(t,n)}readProjectionFromObject(t){if(t.spatialReference&&t.spatialReference.wkid!==void 0){const r=t.spatialReference.wkid;return h("EPSG:"+r)}return null}writeGeometryObject(t,n){return c(t,this.adaptOptions(n))}writeFeatureObject(t,n){n=this.adaptOptions(n);const r={};if(!t.hasProperties())return r.attributes={},r;const s=t.getProperties(),i=t.getGeometry();if(i){r.geometry=c(i,n);const o=n&&(n.dataProjection||n.featureProjection);o&&(r.geometry.spatialReference={wkid:Number(h(o).getCode().split(":").pop())}),delete s[t.getGeometryName()]}return O(s)?r.attributes={}:r.attributes=s,r}writeFeaturesObject(t,n){n=this.adaptOptions(n);const r=[];for(let s=0,i=t.length;s<i;++s)r.push(this.writeFeatureObject(t[s],n));return{features:r}}}function m(e,t){if(!e)return null;let n;if(typeof e.x=="number"&&typeof e.y=="number")n="Point";else if(e.points)n="MultiPoint";else if(e.paths)e.paths.length===1?n="LineString":n="MultiLineString";else if(e.rings){const s=e,i=u(s),o=X(s.rings,i);o.length===1?(n="Polygon",e=Object.assign({},e,{rings:o[0]})):(n="MultiPolygon",e=Object.assign({},e,{rings:o}))}const r=Y[n];return d(r(e),!1,t)}function X(e,t){const n=[],r=[],s=[];let i,o;for(i=0,o=e.length;i<o;++i)n.length=0,Z(n,0,e[i],t.length),G(n,0,n.length,t.length)?r.push([e[i]]):s.push(e[i]);for(;s.length;){const a=s.shift();let g=!1;for(i=r.length-1;i>=0;i--){const M=r[i][0];if(S(new y(M).getExtent(),new y(a).getExtent())){r[i].push(a),g=!0;break}}g||r.push([a.reverse()])}return r}function J(e){let t;return e.m!==void 0&&e.z!==void 0?t=new f([e.x,e.y,e.z,e.m],"XYZM"):e.z!==void 0?t=new f([e.x,e.y,e.z],"XYZ"):e.m!==void 0?t=new f([e.x,e.y,e.m],"XYM"):t=new f([e.x,e.y]),t}function C(e){const t=u(e);return new w(e.paths[0],t)}function k(e){const t=u(e);return new R(e.paths,t)}function u(e){let t="XY";return e.hasZ===!0&&e.hasM===!0?t="XYZM":e.hasZ===!0?t="XYZ":e.hasM===!0&&(t="XYM"),t}function z(e){const t=u(e);return new L(e.points,t)}function I(e){const t=u(e);return new N(e.rings,t)}function _(e){const t=u(e);return new F(e.rings,t)}function T(e,t){const n=e.getCoordinates();let r;const s=e.getLayout();if(s==="XYZ")r={x:n[0],y:n[1],z:n[2]};else if(s==="XYM")r={x:n[0],y:n[1],m:n[2]};else if(s==="XYZM")r={x:n[0],y:n[1],z:n[2],m:n[3]};else if(s==="XY")r={x:n[0],y:n[1]};else throw new Error("Invalid geometry layout");return r}function l(e){const t=e.getLayout();return{hasZ:t==="XYZ"||t==="XYZM",hasM:t==="XYM"||t==="XYZM"}}function v(e,t){const n=l(e);return{hasZ:n.hasZ,hasM:n.hasM,paths:[e.getCoordinates()]}}function H(e,t){const n=l(e);return{hasZ:n.hasZ,hasM:n.hasM,rings:e.getCoordinates(!1)}}function W(e,t){const n=l(e);return{hasZ:n.hasZ,hasM:n.hasM,paths:e.getCoordinates()}}function A(e,t){const n=l(e);return{hasZ:n.hasZ,hasM:n.hasM,points:e.getCoordinates()}}function D(e,t){const n=l(e),r=e.getCoordinates(!1),s=[];for(let i=0;i<r.length;i++)for(let o=r[i].length-1;o>=0;o--)s.push(r[i][o]);return{hasZ:n.hasZ,hasM:n.hasM,rings:s}}function c(e,t){const n=E[e.getType()];return n(d(e,!0,t),t)}const j=x;export{j as E};
