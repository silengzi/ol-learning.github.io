import{g as C,ab as f,ay as v,af as P,q as u,bJ as F,bK as E,bL as L,bp as w,bM as O,bN as x,bO as X,bP as Y,bo as I,P as R,bQ as S,d as D,b2 as T,F as G,bR as $,bS as q,bT as U,bU as W,bV as b,bq as Z,b4 as k,bW as z,bX as J,a as j,bY as K,bZ as N}from"./Layer-bb290663.js";import{l as Q,L as M,i as V}from"./LineString-65f0d157.js";class B{constructor(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.supportedMediaTypes=null}getReadOptions(t,s){if(s){let e=s.dataProjection?C(s.dataProjection):this.readProjection(t);s.extent&&e&&e.getUnits()==="tile-pixels"&&(e=C(e),e.setWorldExtent(s.extent)),s={dataProjection:e,featureProjection:s.featureProjection}}return this.adaptOptions(s)}adaptOptions(t){return Object.assign({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection},t)}getType(){return f()}readFeature(t,s){return f()}readFeatures(t,s){return f()}readGeometry(t,s){return f()}readProjection(t){return f()}writeFeature(t,s){return f()}writeFeatures(t,s){return f()}writeGeometry(t,s){return f()}}const it=B;function nt(d,t,s){const e=s?C(s.featureProjection):null,i=s?C(s.dataProjection):null;let n;if(e&&i&&!v(e,i)?n=(t?d.clone():d).transform(t?e:i,t?i:e):n=d,t&&s&&s.decimals!==void 0){const o=Math.pow(10,s.decimals),a=function(r){for(let l=0,h=r.length;l<h;++l)r[l]=Math.round(r[l]*o)/o;return r};n===d&&(n=d.clone()),n.applyTransform(a)}return n}class _ extends P{constructor(t,s,e){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(t[0]))this.setCoordinates(t,s);else if(s!==void 0&&e)this.setFlatCoordinates(s,t),this.ends_=e;else{let i=this.getLayout();const n=t,o=[],a=[];for(let r=0,l=n.length;r<l;++r){const h=n[r];r===0&&(i=h.getLayout()),u(o,h.getFlatCoordinates()),a.push(o.length)}this.setFlatCoordinates(i,o),this.ends_=a}}appendLineString(t){this.flatCoordinates?u(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const t=new _(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t}closestPointXY(t,s,e,i){return i<F(this.getExtent(),t,s)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(E(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),L(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,s,e,i))}getCoordinateAtM(t,s,e){return this.layout!="XYM"&&this.layout!="XYZM"||this.flatCoordinates.length===0?null:(s=s!==void 0?s:!1,e=e!==void 0?e:!1,Q(this.flatCoordinates,0,this.ends_,this.stride,t,s,e))}getCoordinates(){return w(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(t){return t<0||this.ends_.length<=t?null:new M(this.flatCoordinates.slice(t===0?0:this.ends_[t-1],this.ends_[t]),this.layout)}getLineStrings(){const t=this.flatCoordinates,s=this.ends_,e=this.layout,i=[];let n=0;for(let o=0,a=s.length;o<a;++o){const r=s[o],l=new M(t.slice(n,r),e);i.push(l),n=r}return i}getFlatMidpoints(){const t=[],s=this.flatCoordinates;let e=0;const i=this.ends_,n=this.stride;for(let o=0,a=i.length;o<a;++o){const r=i[o],l=V(s,e,r,n,.5);u(t,l),e=r}return t}getSimplifiedGeometryInternal(t){const s=[],e=[];return s.length=O(this.flatCoordinates,0,this.ends_,this.stride,t,s,0,e),new _(s,"XY",e)}getType(){return"MultiLineString"}intersectsExtent(t){return x(this.flatCoordinates,0,this.ends_,this.stride,t)}setCoordinates(t,s){this.setLayout(s,t,2),this.flatCoordinates||(this.flatCoordinates=[]);const e=X(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=e.length===0?0:e[e.length-1],this.changed()}}const ot=_;class m extends P{constructor(t,s){super(),s&&!Array.isArray(t[0])?this.setFlatCoordinates(s,t):this.setCoordinates(t,s)}appendPoint(t){this.flatCoordinates?u(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()}clone(){const t=new m(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t}closestPointXY(t,s,e,i){if(i<F(this.getExtent(),t,s))return i;const n=this.flatCoordinates,o=this.stride;for(let a=0,r=n.length;a<r;a+=o){const l=Y(t,s,n[a],n[a+1]);if(l<i){i=l;for(let h=0;h<o;++h)e[h]=n[a+h];e.length=o}}return i}getCoordinates(){return I(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(t){const s=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||s<=t?null:new R(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)}getPoints(){const t=this.flatCoordinates,s=this.layout,e=this.stride,i=[];for(let n=0,o=t.length;n<o;n+=e){const a=new R(t.slice(n,n+e),s);i.push(a)}return i}getType(){return"MultiPoint"}intersectsExtent(t){const s=this.flatCoordinates,e=this.stride;for(let i=0,n=s.length;i<n;i+=e){const o=s[i],a=s[i+1];if(S(t,o,a))return!0}return!1}setCoordinates(t,s){this.setLayout(s,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=D(this.flatCoordinates,0,t,this.stride),this.changed()}}const H=m;function tt(d,t,s,e){const i=[];let n=G();for(let o=0,a=s.length;o<a;++o){const r=s[o];n=T(d,t,r[0],e),i.push((n[0]+n[2])/2,(n[1]+n[3])/2),t=r[r.length-1]}return i}class y extends P{constructor(t,s,e){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!e&&!Array.isArray(t[0])){let i=this.getLayout();const n=t,o=[],a=[];for(let r=0,l=n.length;r<l;++r){const h=n[r];r===0&&(i=h.getLayout());const c=o.length,g=h.getEnds();for(let p=0,A=g.length;p<A;++p)g[p]+=c;u(o,h.getFlatCoordinates()),a.push(g)}s=i,t=o,e=a}s!==void 0&&e?(this.setFlatCoordinates(s,t),this.endss_=e):this.setCoordinates(t,s)}appendPolygon(t){let s;if(!this.flatCoordinates)this.flatCoordinates=t.getFlatCoordinates().slice(),s=t.getEnds().slice(),this.endss_.push();else{const e=this.flatCoordinates.length;u(this.flatCoordinates,t.getFlatCoordinates()),s=t.getEnds().slice();for(let i=0,n=s.length;i<n;++i)s[i]+=e}this.endss_.push(s),this.changed()}clone(){const t=this.endss_.length,s=new Array(t);for(let i=0;i<t;++i)s[i]=this.endss_[i].slice();const e=new y(this.flatCoordinates.slice(),this.layout,s);return e.applyProperties(this),e}closestPointXY(t,s,e,i){return i<F(this.getExtent(),t,s)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt($(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),q(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,s,e,i))}containsXY(t,s){return U(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,s)}getArea(){return W(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(t){let s;return t!==void 0?(s=this.getOrientedFlatCoordinates().slice(),b(s,0,this.endss_,this.stride,t)):s=this.flatCoordinates,Z(s,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const t=tt(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=k(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new H(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const t=this.flatCoordinates;z(t,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=b(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(t){const s=[],e=[];return s.length=J(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),s,0,e),new y(s,"XY",e)}getPolygon(t){if(t<0||this.endss_.length<=t)return null;let s;if(t===0)s=0;else{const n=this.endss_[t-1];s=n[n.length-1]}const e=this.endss_[t].slice(),i=e[e.length-1];if(s!==0)for(let n=0,o=e.length;n<o;++n)e[n]-=s;return new j(this.flatCoordinates.slice(s,i),this.layout,e)}getPolygons(){const t=this.layout,s=this.flatCoordinates,e=this.endss_,i=[];let n=0;for(let o=0,a=e.length;o<a;++o){const r=e[o].slice(),l=r[r.length-1];if(n!==0)for(let c=0,g=r.length;c<g;++c)r[c]-=n;const h=new j(s.slice(n,l),t,r);i.push(h),n=l}return i}getType(){return"MultiPolygon"}intersectsExtent(t){return K(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)}setCoordinates(t,s){this.setLayout(s,t,3),this.flatCoordinates||(this.flatCoordinates=[]);const e=N(this.flatCoordinates,0,t,this.stride,this.endss_);if(e.length===0)this.flatCoordinates.length=0;else{const i=e[e.length-1];this.flatCoordinates.length=i.length===0?0:i[i.length-1]}this.changed()}}const rt=y;export{it as F,ot as M,H as a,rt as b,tt as l,nt as t};
