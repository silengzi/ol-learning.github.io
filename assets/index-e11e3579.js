import{S as vt,F as xt,a as Ne,I as en,C as Mi,T as Si}from"./featureloader-5ea9ad61.js";import{M as Ii,R as $i}from"./MVT-20be828b.js";import{g as _e,e as _i,h as Fi,j as ji,M as Tr,V as In,aQ as fr,f as dr,ca as It,ag as qi,aT as Ai,bz as Pi,cE as Di,at as Ri,ar as Li,m as Oi,ah as tn,cy as Ni,cF as Ui,z as Vi}from"./Layer-da76b588.js";import{e as Gi,c as $n,T as _n}from"./TileProperty-0f8ad975.js";import{a as Ji,e as Zi}from"./UrlTile-ef3e4dbe.js";import{G as rn}from"./GeoJSON-1f2a259b.js";import{I as Bi,R as Xi}from"./Raster-1b9b69b7.js";import{T as Wi}from"./TileImage-66662d8b.js";import{j as Hi}from"./net-6888c94c.js";import{T as Yi}from"./Tile-71d632e2.js";import{a as Ot,V as ut,b as Ki,F as Qi}from"./Vector-844a0c6a.js";import{V as pt,a as Fn,d as eo,b as to}from"./VectorTile-3d2d8501.js";import{_ as ro,i as no,o as io,c as oo,b as oe,t as at,g as st,F as ao,p as so,k as lo}from"./index-ceb9aa48.js";import"./MultiPolygon-79cfbc3b.js";import"./LineString-e19dc84a.js";import"./_commonjsHelpers-39b5b250.js";import"./JSONFeature-c33571f5.js";import"./Layer-5d5c7c57.js";import"./common-c2bf7a3a.js";import"./BaseTile-bf862043.js";import"./TileLayer-65677d1f.js";class uo extends Wi{constructor(e){if(super({attributions:e.attributions,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,interpolate:e.interpolate,projection:_e("EPSG:3857"),reprojectionErrorThreshold:e.reprojectionErrorThreshold,state:"loading",tileLoadFunction:e.tileLoadFunction,wrapX:e.wrapX!==void 0?e.wrapX:!0,transition:e.transition,zDirection:e.zDirection}),this.tileJSON_=null,this.tileSize_=e.tileSize,e.url)if(e.jsonp)Hi(e.url,this.handleTileJSONResponse.bind(this),this.handleTileJSONError.bind(this));else{const r=new XMLHttpRequest;r.addEventListener("load",this.onXHRLoad_.bind(this)),r.addEventListener("error",this.onXHRError_.bind(this)),r.open("GET",e.url),r.send()}else if(e.tileJSON)this.handleTileJSONResponse(e.tileJSON);else throw new Error("Either `url` or `tileJSON` options must be provided")}onXHRLoad_(e){const r=e.target;if(!r.status||r.status>=200&&r.status<300){let n;try{n=JSON.parse(r.responseText)}catch{this.handleTileJSONError();return}this.handleTileJSONResponse(n)}else this.handleTileJSONError()}onXHRError_(e){this.handleTileJSONError()}getTileJSON(){return this.tileJSON_}handleTileJSONResponse(e){const r=_e("EPSG:4326"),n=this.getProjection();let i;if(e.bounds!==void 0){const l=_i(r,n);i=Fi(e.bounds,l)}const o=Gi(n),a=e.minzoom||0,s=e.maxzoom||22,u=$n({extent:o,maxZoom:s,minZoom:a,tileSize:this.tileSize_});if(this.tileGrid=u,this.tileUrlFunction=Ji(e.tiles,u),e.attribution&&!this.getAttributions()){const l=i!==void 0?i:o;this.setAttributions(function(p){return ji(l,p.extent)?[e.attribution]:null})}this.tileJSON_=e,this.setState("ready")}handleTileJSONError(){this.setState("error")}}const jn=uo,po="Declutter Group",co=`
  <div id="map" class="map"></div>
`,fo=`
  .map {
    width: 100%;
    height: 400px;
  }
  .map .ol-rotate {
    left: .5em;
    bottom: .5em;
    top: auto;
    right: auto;
  }
  .map:-webkit-full-screen {
    height: 100%;
    margin: 0;
  }
  .map:fullscreen {
    height: 100%;
  }
`,mo=`
  import {Feature, Map, View} from 'ol/index.js';
  import {Group as LayerGroup, Vector as VectorLayer} from 'ol/layer.js';
  import {Vector as VectorSource} from 'ol/source.js';
  import {apply} from 'ol-mapbox-style';
  import {fromExtent} from 'ol/geom/Polygon.js';
  import {getCenter} from 'ol/extent.js';

  const square = [-12e6, 3.5e6, -10e6, 5.5e6];
  const overlay = new VectorLayer({
    source: new VectorSource({
      features: [new Feature(fromExtent(square))],
    }),
    style: {
      'stroke-color': 'rgba(180, 180, 255, 1)',
      'stroke-width': 1,
      'fill-color': 'rgba(200, 200, 255, 0.85)',
    },
  });

  const layer = new LayerGroup();
  apply(
    layer,
    'https://api.maptiler.com/maps/topo-v2/style.json?key=Get your own API key at https://www.maptiler.com/cloud/'
  );

  const map = new Map({
    target: 'map',
    view: new View({
      center: getCenter(square),
      zoom: 4,
    }),
    layers: [layer, overlay],
  });

  overlay.on('prerender', () => map.flushDeclutterItems());
`,ho=`
  {
    "name": "declutter-group",
    "dependencies": {
      "ol": "8.2.0",
      "ol-mapbox-style": "^12.0.0"
    },
    "devDependencies": {
      "vite": "^3.2.3"
    },
    "scripts": {
      "start": "vite",
      "build": "vite build"
    }
  }
`;function qn(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var yo={},An,nn={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],rebeccapurple:[102,51,153,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function ct(t){return t=Math.round(t),t<0?0:t>255?255:t}function on(t){return t<0?0:t>1?1:t}function Ht(t){return t[t.length-1]==="%"?ct(parseFloat(t)/100*255):ct(parseInt(t))}function wt(t){return t[t.length-1]==="%"?on(parseFloat(t)/100):on(parseFloat(t))}function Yt(t,e,r){return r<0?r+=1:r>1&&(r-=1),r*6<1?t+(e-t)*r*6:r*2<1?e:r*3<2?t+(e-t)*(2/3-r)*6:t}function go(t){var e=t.replace(/ /g,"").toLowerCase();if(e in nn)return nn[e].slice();if(e[0]==="#"){if(e.length===4){var r=parseInt(e.substr(1),16);return r>=0&&r<=4095?[(r&3840)>>4|(r&3840)>>8,r&240|(r&240)>>4,r&15|(r&15)<<4,1]:null}else if(e.length===7){var r=parseInt(e.substr(1),16);return r>=0&&r<=16777215?[(r&16711680)>>16,(r&65280)>>8,r&255,1]:null}return null}var n=e.indexOf("("),i=e.indexOf(")");if(n!==-1&&i+1===e.length){var o=e.substr(0,n),a=e.substr(n+1,i-(n+1)).split(","),s=1;switch(o){case"rgba":if(a.length!==4)return null;s=wt(a.pop());case"rgb":return a.length!==3?null:[Ht(a[0]),Ht(a[1]),Ht(a[2]),s];case"hsla":if(a.length!==4)return null;s=wt(a.pop());case"hsl":if(a.length!==3)return null;var u=(parseFloat(a[0])%360+360)%360/360,l=wt(a[1]),p=wt(a[2]),c=p<=.5?p*(l+1):p+l-p*l,f=p*2-c;return[ct(Yt(f,c,u+1/3)*255),ct(Yt(f,c,u)*255),ct(Yt(f,c,u-1/3)*255),s];default:return null}}return null}try{An=yo.parseCSSColor=go}catch{}class se{constructor(e,r,n,i=1){this.r=e,this.g=r,this.b=n,this.a=i}static parse(e){if(!e)return;if(e instanceof se)return e;if(typeof e!="string")return;const r=An(e);if(r)return new se(r[0]/255*r[3],r[1]/255*r[3],r[2]/255*r[3],r[3])}toString(){const[e,r,n,i]=this.toArray();return`rgba(${Math.round(e)},${Math.round(r)},${Math.round(n)},${i})`}toArray(){const{r:e,g:r,b:n,a:i}=this;return i===0?[0,0,0,0]:[e*255/i,r*255/i,n*255/i,i]}toArray01(){const{r:e,g:r,b:n,a:i}=this;return i===0?[0,0,0,0]:[e/i,r/i,n/i,i]}toArray01PremultipliedAlpha(){const{r:e,g:r,b:n,a:i}=this;return[e,r,n,i]}}se.black=new se(0,0,0,1);se.white=new se(1,1,1,1);se.transparent=new se(0,0,0,0);se.red=new se(1,0,0,1);se.blue=new se(0,0,1,1);var ce=se;function mt(t){return typeof t=="object"?["literal",t]:t}function bo(t,e){let r=t.stops;if(!r)return vo(t,e);const n=r&&typeof r[0][0]=="object",i=n||t.property!==void 0,o=n||!i;return r=r.map(a=>!i&&e.tokens&&typeof a[1]=="string"?[a[0],ko(a[1])]:[a[0],mt(a[1])]),n?xo(t,e,r):o?zo(t,e,r):mr(t,e,r)}function vo(t,e){const r=["get",t.property];if(t.default===void 0)return e.type==="string"?["string",r]:r;if(e.type==="enum")return["match",r,Object.keys(e.values),r,t.default];{const n=[e.type==="color"?"to-color":e.type,r,mt(t.default)];return e.type==="array"&&n.splice(1,0,e.value,e.length||null),n}}function Er(t){switch(t.colorSpace){case"hcl":return"interpolate-hcl";case"lab":return"interpolate-lab";default:return"interpolate"}}function xo(t,e,r){const n={},i={},o=[];for(let s=0;s<r.length;s++){const u=r[s],l=u[0].zoom;n[l]===void 0&&(n[l]={zoom:l,type:t.type,property:t.property,default:t.default},i[l]=[],o.push(l)),i[l].push([u[0].value,u[1]])}if(Mr({},e)==="exponential"){const s=[Er(t),["linear"],["zoom"]];for(const u of o){const l=mr(n[u],e,i[u]);Ze(s,u,l,!1)}return s}else{const s=["step",["zoom"]];for(const u of o){const l=mr(n[u],e,i[u]);Ze(s,u,l,!0)}return Cr(s),s}}function wo(t,e){if(t!==void 0)return t;if(e!==void 0)return e}function an(t,e){const r=mt(wo(t.default,e.default));return r===void 0&&e.type==="resolvedImage"?"":r}function mr(t,e,r){const n=Mr(t,e),i=["get",t.property];if(n==="categorical"&&typeof r[0][0]=="boolean"){const o=["case"];for(const a of r)o.push(["==",i,a[0]],a[1]);return o.push(an(t,e)),o}else if(n==="categorical"){const o=["match",i];for(const a of r)Ze(o,a[0],a[1],!1);return o.push(an(t,e)),o}else if(n==="interval"){const o=["step",["number",i]];for(const a of r)Ze(o,a[0],a[1],!0);return Cr(o),t.default===void 0?o:["case",["==",["typeof",i],"number"],o,mt(t.default)]}else if(n==="exponential"){const o=t.base!==void 0?t.base:1,a=[Er(t),o===1?["linear"]:["exponential",o],["number",i]];for(const s of r)Ze(a,s[0],s[1],!1);return t.default===void 0?a:["case",["==",["typeof",i],"number"],a,mt(t.default)]}else throw new Error(`Unknown property function type ${n}`)}function zo(t,e,r,n=["zoom"]){const i=Mr(t,e);let o,a=!1;if(i==="interval")o=["step",n],a=!0;else if(i==="exponential"){const s=t.base!==void 0?t.base:1;o=[Er(t),s===1?["linear"]:["exponential",s],n]}else throw new Error(`Unknown zoom function type "${i}"`);for(const s of r)Ze(o,s[0],s[1],a);return Cr(o),o}function Cr(t){t[0]==="step"&&t.length===3&&(t.push(0),t.push(t[3]))}function Ze(t,e,r,n){t.length>3&&e===t[t.length-2]||(n&&t.length===2||t.push(e),t.push(r))}function Mr(t,e){return t.type?t.type:e.expression.interpolated?"exponential":"interval"}function ko(t){const e=["concat"],r=/{([^{}]+)}/g;let n=0;for(let i=r.exec(t);i!==null;i=r.exec(t)){const o=t.slice(n,r.lastIndex-i[0].length);n=r.lastIndex,o.length>0&&e.push(o),e.push(["get",i[1]])}if(e.length===1)return t;if(n<t.length)e.push(t.slice(n));else if(e.length===2)return["to-string",e[1]];return e}class To extends Error{constructor(e,r){super(r),this.message=r,this.key=e}}var xe=To;class Sr{constructor(e,r=[]){this.parent=e,this.bindings={};for(const[n,i]of r)this.bindings[n]=i}concat(e){return new Sr(this,e)}get(e){if(this.bindings[e])return this.bindings[e];if(this.parent)return this.parent.get(e);throw new Error(`${e} not found in scope.`)}has(e){return this.bindings[e]?!0:this.parent?this.parent.has(e):!1}}var Eo=Sr;const Nt={kind:"null"},m={kind:"number"},S={kind:"string"},T={kind:"boolean"},Ee={kind:"color"},Be={kind:"object"},E={kind:"value"},Co={kind:"error"},Ut={kind:"collator"},Vt={kind:"formatted"},gt={kind:"resolvedImage"};function be(t,e){return{kind:"array",itemType:t,N:e}}function L(t){if(t.kind==="array"){const e=L(t.itemType);return typeof t.N=="number"?`array<${e}, ${t.N}>`:t.itemType.kind==="value"?"array":`array<${e}>`}else return t.kind}const Mo=[Nt,m,S,T,Ee,Vt,Be,be(E),gt];function ht(t,e){if(e.kind==="error")return null;if(t.kind==="array"){if(e.kind==="array"&&(e.N===0&&e.itemType.kind==="value"||!ht(t.itemType,e.itemType))&&(typeof t.N!="number"||t.N===e.N))return null}else{if(t.kind===e.kind)return null;if(t.kind==="value"){for(const r of Mo)if(!ht(r,e))return null}}return`Expected ${L(t)} but found ${L(e)} instead.`}function Ir(t,e){return e.some(r=>r.kind===t.kind)}function yt(t,e){return e.some(r=>r==="null"?t===null:r==="array"?Array.isArray(t):r==="object"?t&&!Array.isArray(t)&&typeof t=="object":r===typeof t)}class $r{constructor(e,r,n){e?this.sensitivity=r?"variant":"case":this.sensitivity=r?"accent":"base",this.locale=n,this.collator=new Intl.Collator(this.locale?this.locale:[],{sensitivity:this.sensitivity,usage:"search"})}compare(e,r){return this.collator.compare(e,r)}resolvedLocale(){return new Intl.Collator(this.locale?this.locale:[]).resolvedOptions().locale}}class hr{constructor(e,r,n,i,o){this.text=e.normalize?e.normalize():e,this.image=r,this.scale=n,this.fontStack=i,this.textColor=o}}class we{constructor(e){this.sections=e}static fromString(e){return new we([new hr(e,null,null,null,null)])}isEmpty(){return this.sections.length===0?!0:!this.sections.some(e=>e.text.length!==0||e.image&&e.image.name.length!==0)}static factory(e){return e instanceof we?e:we.fromString(e)}toString(){return this.sections.length===0?"":this.sections.map(e=>e.text).join("")}serialize(){const e=["format"];for(const r of this.sections){if(r.image){e.push(["image",r.image.name]);continue}e.push(r.text);const n={};r.fontStack&&(n["text-font"]=["literal",r.fontStack.split(",")]),r.scale&&(n["font-scale"]=r.scale),r.textColor&&(n["text-color"]=["rgba"].concat(r.textColor.toArray())),e.push(n)}return e}}class je{constructor(e){this.name=e.name,this.available=e.available}toString(){return this.name}static fromString(e){return e?new je({name:e,available:!1}):null}serialize(){return["image",this.name]}}function Pn(t,e,r,n){return typeof t=="number"&&t>=0&&t<=255&&typeof e=="number"&&e>=0&&e<=255&&typeof r=="number"&&r>=0&&r<=255?typeof n>"u"||typeof n=="number"&&n>=0&&n<=1?null:`Invalid rgba value [${[t,e,r,n].join(", ")}]: 'a' must be between 0 and 1.`:`Invalid rgba value [${(typeof n=="number"?[t,e,r,n]:[t,e,r]).join(", ")}]: 'r', 'g', and 'b' must be between 0 and 255.`}function $t(t){if(t===null)return!0;if(typeof t=="string")return!0;if(typeof t=="boolean")return!0;if(typeof t=="number")return!0;if(t instanceof ce)return!0;if(t instanceof $r)return!0;if(t instanceof we)return!0;if(t instanceof je)return!0;if(Array.isArray(t)){for(const e of t)if(!$t(e))return!1;return!0}else if(typeof t=="object"){for(const e in t)if(!$t(t[e]))return!1;return!0}else return!1}function X(t){if(t===null)return Nt;if(typeof t=="string")return S;if(typeof t=="boolean")return T;if(typeof t=="number")return m;if(t instanceof ce)return Ee;if(t instanceof $r)return Ut;if(t instanceof we)return Vt;if(t instanceof je)return gt;if(Array.isArray(t)){const e=t.length;let r;for(const n of t){const i=X(n);if(!r)r=i;else{if(r===i)continue;r=E;break}}return be(r||E,e)}else return Be}function ft(t){const e=typeof t;return t===null?"":e==="string"||e==="number"||e==="boolean"?String(t):t instanceof ce||t instanceof we||t instanceof je?t.toString():JSON.stringify(t)}class _r{constructor(e,r){this.type=e,this.value=r}static parse(e,r){if(e.length!==2)return r.error(`'literal' expression requires exactly one argument, but found ${e.length-1} instead.`);if(!$t(e[1]))return r.error("invalid value");const n=e[1];let i=X(n);const o=r.expectedType;return i.kind==="array"&&i.N===0&&o&&o.kind==="array"&&(typeof o.N!="number"||o.N===0)&&(i=o),new _r(i,n)}evaluate(){return this.value}eachChild(){}outputDefined(){return!0}serialize(){return this.type.kind==="array"||this.type.kind==="object"?["literal",this.value]:this.value instanceof ce?["rgba"].concat(this.value.toArray()):this.value instanceof we?this.value.serialize():this.value}}var _t=_r;class So{constructor(e){this.name="ExpressionEvaluationError",this.message=e}toJSON(){return this.message}}var K=So;const Kt={string:S,number:m,boolean:T,object:Be};class Fr{constructor(e,r){this.type=e,this.args=r}static parse(e,r){if(e.length<2)return r.error("Expected at least one argument.");let n=1,i;const o=e[0];if(o==="array"){let s;if(e.length>2){const l=e[1];if(typeof l!="string"||!(l in Kt)||l==="object")return r.error('The item type argument of "array" must be one of string, number, boolean',1);s=Kt[l],n++}else s=E;let u;if(e.length>3){if(e[2]!==null&&(typeof e[2]!="number"||e[2]<0||e[2]!==Math.floor(e[2])))return r.error('The length argument to "array" must be a positive integer literal',2);u=e[2],n++}i=be(s,u)}else i=Kt[o];const a=[];for(;n<e.length;n++){const s=r.parse(e[n],n,E);if(!s)return null;a.push(s)}return new Fr(i,a)}evaluate(e){for(let r=0;r<this.args.length;r++){const n=this.args[r].evaluate(e);if(ht(this.type,X(n))){if(r===this.args.length-1)throw new K(`Expected value to be of type ${L(this.type)}, but found ${L(X(n))} instead.`)}else return n}return null}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every(e=>e.outputDefined())}serialize(){const e=this.type,r=[e.kind];if(e.kind==="array"){const n=e.itemType;if(n.kind==="string"||n.kind==="number"||n.kind==="boolean"){r.push(n.kind);const i=e.N;(typeof i=="number"||this.args.length>1)&&r.push(i)}}return r.concat(this.args.map(n=>n.serialize()))}}var Te=Fr;class Gt{constructor(e){this.type=Vt,this.sections=e}static parse(e,r){if(e.length<2)return r.error("Expected at least one argument.");const n=e[1];if(!Array.isArray(n)&&typeof n=="object")return r.error("First argument must be an image or text section.");const i=[];let o=!1;for(let a=1;a<=e.length-1;++a){const s=e[a];if(o&&typeof s=="object"&&!Array.isArray(s)){o=!1;let u=null;if(s["font-scale"]&&(u=r.parse(s["font-scale"],1,m),!u))return null;let l=null;if(s["text-font"]&&(l=r.parse(s["text-font"],1,be(S)),!l))return null;let p=null;if(s["text-color"]&&(p=r.parse(s["text-color"],1,Ee),!p))return null;const c=i[i.length-1];c.scale=u,c.font=l,c.textColor=p}else{const u=r.parse(e[a],1,E);if(!u)return null;const l=u.type.kind;if(l!=="string"&&l!=="value"&&l!=="null"&&l!=="resolvedImage")return r.error("Formatted text type must be 'string', 'value', 'image' or 'null'.");o=!0,i.push({content:u,scale:null,font:null,textColor:null})}}return new Gt(i)}evaluate(e){const r=n=>{const i=n.content.evaluate(e);return X(i)===gt?new hr("",i,null,null,null):new hr(ft(i),null,n.scale?n.scale.evaluate(e):null,n.font?n.font.evaluate(e).join(","):null,n.textColor?n.textColor.evaluate(e):null)};return new we(this.sections.map(r))}eachChild(e){for(const r of this.sections)e(r.content),r.scale&&e(r.scale),r.font&&e(r.font),r.textColor&&e(r.textColor)}outputDefined(){return!1}serialize(){const e=["format"];for(const r of this.sections){e.push(r.content.serialize());const n={};r.scale&&(n["font-scale"]=r.scale.serialize()),r.font&&(n["text-font"]=r.font.serialize()),r.textColor&&(n["text-color"]=r.textColor.serialize()),e.push(n)}return e}}class Jt{constructor(e){this.type=gt,this.input=e}static parse(e,r){if(e.length!==2)return r.error("Expected two arguments.");const n=r.parse(e[1],1,S);return n?new Jt(n):r.error("No image name provided.")}evaluate(e){const r=this.input.evaluate(e),n=je.fromString(r);return n&&e.availableImages&&(n.available=e.availableImages.indexOf(r)>-1),n}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){return["image",this.input.serialize()]}}const Io={"to-boolean":T,"to-color":Ee,"to-number":m,"to-string":S};class jr{constructor(e,r){this.type=e,this.args=r}static parse(e,r){if(e.length<2)return r.error("Expected at least one argument.");const n=e[0];if((n==="to-boolean"||n==="to-string")&&e.length!==2)return r.error("Expected one argument.");const i=Io[n],o=[];for(let a=1;a<e.length;a++){const s=r.parse(e[a],a,E);if(!s)return null;o.push(s)}return new jr(i,o)}evaluate(e){if(this.type.kind==="boolean")return!!this.args[0].evaluate(e);if(this.type.kind==="color"){let r,n;for(const i of this.args){if(r=i.evaluate(e),n=null,r instanceof ce)return r;if(typeof r=="string"){const o=e.parseColor(r);if(o)return o}else if(Array.isArray(r)&&(r.length<3||r.length>4?n=`Invalid rbga value ${JSON.stringify(r)}: expected an array containing either three or four numeric values.`:n=Pn(r[0],r[1],r[2],r[3]),!n))return new ce(r[0]/255,r[1]/255,r[2]/255,r[3])}throw new K(n||`Could not parse color from value '${typeof r=="string"?r:String(JSON.stringify(r))}'`)}else if(this.type.kind==="number"){let r=null;for(const n of this.args){if(r=n.evaluate(e),r===null)return 0;const i=Number(r);if(!isNaN(i))return i}throw new K(`Could not convert ${JSON.stringify(r)} to number.`)}else return this.type.kind==="formatted"?we.fromString(ft(this.args[0].evaluate(e))):this.type.kind==="resolvedImage"?je.fromString(ft(this.args[0].evaluate(e))):ft(this.args[0].evaluate(e))}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every(e=>e.outputDefined())}serialize(){if(this.type.kind==="formatted")return new Gt([{content:this.args[0],scale:null,font:null,textColor:null}]).serialize();if(this.type.kind==="resolvedImage")return new Jt(this.args[0]).serialize();const e=[`to-${this.type.kind}`];return this.eachChild(r=>{e.push(r.serialize())}),e}}var Ge=jr;const $o=["Unknown","Point","LineString","Polygon"];class _o{constructor(){this.globals=null,this.feature=null,this.featureState=null,this.formattedSection=null,this._parseColorCache={},this.availableImages=null,this.canonical=null,this.featureTileCoord=null,this.featureDistanceData=null}id(){return this.feature&&this.feature.id!==void 0?this.feature.id:null}geometryType(){return this.feature?typeof this.feature.type=="number"?$o[this.feature.type]:this.feature.type:null}geometry(){return this.feature&&"geometry"in this.feature?this.feature.geometry:null}canonicalID(){return this.canonical}properties(){return this.feature&&this.feature.properties||{}}distanceFromCenter(){if(this.featureTileCoord&&this.featureDistanceData){const e=this.featureDistanceData.center,r=this.featureDistanceData.scale,{x:n,y:i}=this.featureTileCoord,o=n*r-e[0],a=i*r-e[1],s=this.featureDistanceData.bearing[0],u=this.featureDistanceData.bearing[1];return s*o+u*a}return 0}parseColor(e){let r=this._parseColorCache[e];return r||(r=this._parseColorCache[e]=ce.parse(e)),r}}var Dn=_o;class Je{constructor(e,r,n,i){this.name=e,this.type=r,this._evaluate=n,this.args=i}evaluate(e){return this._evaluate(e,this.args)}eachChild(e){this.args.forEach(e)}outputDefined(){return!1}serialize(){return[this.name].concat(this.args.map(e=>e.serialize()))}static parse(e,r){const n=e[0],i=Je.definitions[n];if(!i)return r.error(`Unknown expression "${n}". If you wanted a literal array, use ["literal", [...]].`,0);const o=Array.isArray(i)?i[0]:i.type,a=Array.isArray(i)?[[i[1],i[2]]]:i.overloads,s=a.filter(([l])=>!Array.isArray(l)||l.length===e.length-1);let u=null;for(const[l,p]of s){u=new Un(r.registry,r.path,null,r.scope);const c=[];let f=!1;for(let d=1;d<e.length;d++){const y=e[d],C=Array.isArray(l)?l[d-1]:l.type,g=u.parse(y,1+c.length,C);if(!g){f=!0;break}c.push(g)}if(!f){if(Array.isArray(l)&&l.length!==c.length){u.error(`Expected ${l.length} arguments, but found ${c.length} instead.`);continue}for(let d=0;d<c.length;d++){const y=Array.isArray(l)?l[d]:l.type,C=c[d];u.concat(d+1).checkSubtype(y,C.type)}if(u.errors.length===0)return new Je(n,o,p,c)}}if(s.length===1)r.errors.push(...u.errors);else{const p=(s.length?s:a).map(([f])=>Fo(f)).join(" | "),c=[];for(let f=1;f<e.length;f++){const d=r.parse(e[f],1+c.length);if(!d)return null;c.push(L(d.type))}r.error(`Expected arguments of type ${p}, but found (${c.join(", ")}) instead.`)}return null}static register(e,r){Je.definitions=r;for(const n in r)e[n]=Je}}function Fo(t){return Array.isArray(t)?`(${t.map(L).join(", ")})`:`(${L(t.type)}...)`}var Ye=Je;class Zt{constructor(e,r,n){this.type=Ut,this.locale=n,this.caseSensitive=e,this.diacriticSensitive=r}static parse(e,r){if(e.length!==2)return r.error("Expected one argument.");const n=e[1];if(typeof n!="object"||Array.isArray(n))return r.error("Collator options argument must be an object.");const i=r.parse(n["case-sensitive"]===void 0?!1:n["case-sensitive"],1,T);if(!i)return null;const o=r.parse(n["diacritic-sensitive"]===void 0?!1:n["diacritic-sensitive"],1,T);if(!o)return null;let a=null;return n.locale&&(a=r.parse(n.locale,1,S),!a)?null:new Zt(i,o,a)}evaluate(e){return new $r(this.caseSensitive.evaluate(e),this.diacriticSensitive.evaluate(e),this.locale?this.locale.evaluate(e):null)}eachChild(e){e(this.caseSensitive),e(this.diacriticSensitive),this.locale&&e(this.locale)}outputDefined(){return!1}serialize(){const e={};return e["case-sensitive"]=this.caseSensitive.serialize(),e["diacritic-sensitive"]=this.diacriticSensitive.serialize(),this.locale&&(e.locale=this.locale.serialize()),["collator",e]}}const $e=8192;function qr(t,e){t[0]=Math.min(t[0],e[0]),t[1]=Math.min(t[1],e[1]),t[2]=Math.max(t[2],e[0]),t[3]=Math.max(t[3],e[1])}function jo(t){return(180+t)/360}function qo(t){return(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+t*Math.PI/360)))/360}function Ft(t,e){return!(t[0]<=e[0]||t[2]>=e[2]||t[1]<=e[1]||t[3]>=e[3])}function Ao(t,e){const r=jo(t[0]),n=qo(t[1]),i=Math.pow(2,e.z);return[Math.round(r*i*$e),Math.round(n*i*$e)]}function Po(t,e,r){const n=t[0]-e[0],i=t[1]-e[1],o=t[0]-r[0],a=t[1]-r[1];return n*a-o*i===0&&n*o<=0&&i*a<=0}function Do(t,e,r){return e[1]>t[1]!=r[1]>t[1]&&t[0]<(r[0]-e[0])*(t[1]-e[1])/(r[1]-e[1])+e[0]}function Ar(t,e){let r=!1;for(let n=0,i=e.length;n<i;n++){const o=e[n];for(let a=0,s=o.length;a<s-1;a++){if(Po(t,o[a],o[a+1]))return!1;Do(t,o[a],o[a+1])&&(r=!r)}}return r}function Ro(t,e){for(let r=0;r<e.length;r++)if(Ar(t,e[r]))return!0;return!1}function Lo(t,e){return t[0]*e[1]-t[1]*e[0]}function sn(t,e,r,n){const i=t[0]-r[0],o=t[1]-r[1],a=e[0]-r[0],s=e[1]-r[1],u=n[0]-r[0],l=n[1]-r[1],p=i*l-u*o,c=a*l-u*s;return p>0&&c<0||p<0&&c>0}function Oo(t,e,r,n){const i=[e[0]-t[0],e[1]-t[1]],o=[n[0]-r[0],n[1]-r[1]];return Lo(o,i)===0?!1:!!(sn(t,e,r,n)&&sn(r,n,t,e))}function No(t,e,r){for(const n of r)for(let i=0;i<n.length-1;++i)if(Oo(t,e,n[i],n[i+1]))return!0;return!1}function Rn(t,e){for(let r=0;r<t.length;++r)if(!Ar(t[r],e))return!1;for(let r=0;r<t.length-1;++r)if(No(t[r],t[r+1],e))return!1;return!0}function Uo(t,e){for(let r=0;r<e.length;r++)if(Rn(t,e[r]))return!0;return!1}function Pr(t,e,r){const n=[];for(let i=0;i<t.length;i++){const o=[];for(let a=0;a<t[i].length;a++){const s=Ao(t[i][a],r);qr(e,s),o.push(s)}n.push(o)}return n}function Ln(t,e,r){const n=[];for(let i=0;i<t.length;i++){const o=Pr(t[i],e,r);n.push(o)}return n}function On(t,e,r,n){if(t[0]<r[0]||t[0]>r[2]){const i=n*.5;let o=t[0]-r[0]>i?-n:r[0]-t[0]>i?n:0;o===0&&(o=t[0]-r[2]>i?-n:r[2]-t[0]>i?n:0),t[0]+=o}qr(e,t)}function Vo(t){t[0]=t[1]=1/0,t[2]=t[3]=-1/0}function ln(t,e,r,n){const i=Math.pow(2,n.z)*$e,o=[n.x*$e,n.y*$e],a=[];if(!t)return a;for(const s of t)for(const u of s){const l=[u.x+o[0],u.y+o[1]];On(l,e,r,i),a.push(l)}return a}function un(t,e,r,n){const i=Math.pow(2,n.z)*$e,o=[n.x*$e,n.y*$e],a=[];if(!t)return a;for(const s of t){const u=[];for(const l of s){const p=[l.x+o[0],l.y+o[1]];qr(e,p),u.push(p)}a.push(u)}if(e[2]-e[0]<=i/2){Vo(e);for(const s of a)for(const u of s)On(u,e,r,i)}return a}function Go(t,e){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],i=t.canonicalID();if(!i)return!1;if(e.type==="Polygon"){const o=Pr(e.coordinates,n,i),a=ln(t.geometry(),r,n,i);if(!Ft(r,n))return!1;for(const s of a)if(!Ar(s,o))return!1}if(e.type==="MultiPolygon"){const o=Ln(e.coordinates,n,i),a=ln(t.geometry(),r,n,i);if(!Ft(r,n))return!1;for(const s of a)if(!Ro(s,o))return!1}return!0}function Jo(t,e){const r=[1/0,1/0,-1/0,-1/0],n=[1/0,1/0,-1/0,-1/0],i=t.canonicalID();if(!i)return!1;if(e.type==="Polygon"){const o=Pr(e.coordinates,n,i),a=un(t.geometry(),r,n,i);if(!Ft(r,n))return!1;for(const s of a)if(!Rn(s,o))return!1}if(e.type==="MultiPolygon"){const o=Ln(e.coordinates,n,i),a=un(t.geometry(),r,n,i);if(!Ft(r,n))return!1;for(const s of a)if(!Uo(s,o))return!1}return!0}class dt{constructor(e,r){this.type=T,this.geojson=e,this.geometries=r}static parse(e,r){if(e.length!==2)return r.error(`'within' expression requires exactly one argument, but found ${e.length-1} instead.`);if($t(e[1])){const n=e[1];if(n.type==="FeatureCollection")for(let i=0;i<n.features.length;++i){const o=n.features[i].geometry.type;if(o==="Polygon"||o==="MultiPolygon")return new dt(n,n.features[i].geometry)}else if(n.type==="Feature"){const i=n.geometry.type;if(i==="Polygon"||i==="MultiPolygon")return new dt(n,n.geometry)}else if(n.type==="Polygon"||n.type==="MultiPolygon")return new dt(n,n)}return r.error("'within' expression requires valid geojson object that contains polygon geometry type.")}evaluate(e){if(e.geometry()!=null&&e.canonicalID()!=null){if(e.geometryType()==="Point")return Go(e,this.geometries);if(e.geometryType()==="LineString")return Jo(e,this.geometries)}return!1}eachChild(){}outputDefined(){return!0}serialize(){return["within",this.geojson]}}var Dr=dt;function Bt(t){if(t instanceof Ye){if(t.name==="get"&&t.args.length===1)return!1;if(t.name==="feature-state")return!1;if(t.name==="has"&&t.args.length===1)return!1;if(t.name==="properties"||t.name==="geometry-type"||t.name==="id")return!1;if(/^filter-/.test(t.name))return!1}if(t instanceof Dr)return!1;let e=!0;return t.eachChild(r=>{e&&!Bt(r)&&(e=!1)}),e}function Rr(t){if(t instanceof Ye&&t.name==="feature-state")return!1;let e=!0;return t.eachChild(r=>{e&&!Rr(r)&&(e=!1)}),e}function Lr(t,e){if(t instanceof Ye&&e.indexOf(t.name)>=0)return!1;let r=!0;return t.eachChild(n=>{r&&!Lr(n,e)&&(r=!1)}),r}class Or{constructor(e,r){this.type=r.type,this.name=e,this.boundExpression=r}static parse(e,r){if(e.length!==2||typeof e[1]!="string")return r.error("'var' expression requires exactly one string literal argument.");const n=e[1];return r.scope.has(n)?new Or(n,r.scope.get(n)):r.error(`Unknown variable "${n}". Make sure "${n}" has been bound in an enclosing "let" expression before using it.`,1)}evaluate(e){return this.boundExpression.evaluate(e)}eachChild(){}outputDefined(){return!1}serialize(){return["var",this.name]}}var Nn=Or;class Nr{constructor(e,r=[],n,i=new Eo,o=[]){this.registry=e,this.path=r,this.key=r.map(a=>`[${a}]`).join(""),this.scope=i,this.errors=o,this.expectedType=n}parse(e,r,n,i,o={}){return r?this.concat(r,n,i)._parse(e,o):this._parse(e,o)}_parse(e,r){(e===null||typeof e=="string"||typeof e=="boolean"||typeof e=="number")&&(e=["literal",e]);function n(i,o,a){return a==="assert"?new Te(o,[i]):a==="coerce"?new Ge(o,[i]):i}if(Array.isArray(e)){if(e.length===0)return this.error('Expected an array with at least one element. If you wanted a literal array, use ["literal", []].');const i=e[0];if(typeof i!="string")return this.error(`Expression name must be a string, but found ${typeof i} instead. If you wanted a literal array, use ["literal", [...]].`,0),null;const o=this.registry[i];if(o){let a=o.parse(e,this);if(!a)return null;if(this.expectedType){const s=this.expectedType,u=a.type;if((s.kind==="string"||s.kind==="number"||s.kind==="boolean"||s.kind==="object"||s.kind==="array")&&u.kind==="value")a=n(a,s,r.typeAnnotation||"assert");else if((s.kind==="color"||s.kind==="formatted"||s.kind==="resolvedImage")&&(u.kind==="value"||u.kind==="string"))a=n(a,s,r.typeAnnotation||"coerce");else if(this.checkSubtype(s,u))return null}if(!(a instanceof _t)&&a.type.kind!=="resolvedImage"&&yr(a)){const s=new Dn;try{a=new _t(a.type,a.evaluate(s))}catch(u){return this.error(u.message),null}}return a}return this.error(`Unknown expression "${i}". If you wanted a literal array, use ["literal", [...]].`,0)}else return typeof e>"u"?this.error("'undefined' value invalid. Use null instead."):typeof e=="object"?this.error('Bare objects invalid. Use ["literal", {...}] instead.'):this.error(`Expected an array, but found ${typeof e} instead.`)}concat(e,r,n){const i=typeof e=="number"?this.path.concat(e):this.path,o=n?this.scope.concat(n):this.scope;return new Nr(this.registry,i,r||null,o,this.errors)}error(e,...r){const n=`${this.key}${r.map(i=>`[${i}]`).join("")}`;this.errors.push(new xe(n,e))}checkSubtype(e,r){const n=ht(e,r);return n&&this.error(n),n}}var Un=Nr;function yr(t){if(t instanceof Nn)return yr(t.boundExpression);if(t instanceof Ye&&t.name==="error")return!1;if(t instanceof Zt)return!1;if(t instanceof Dr)return!1;const e=t instanceof Ge||t instanceof Te;let r=!0;return t.eachChild(n=>{e?r=r&&yr(n):r=r&&n instanceof _t}),r?Bt(t)&&Lr(t,["zoom","heatmap-density","line-progress","sky-radial-progress","accumulated","is-supported-script","pitch","distance-from-center"]):!1}function Vn(t,e){const r=t.length-1;let n=0,i=r,o=0,a,s;for(;n<=i;)if(o=Math.floor((n+i)/2),a=t[o],s=t[o+1],a<=e){if(o===r||e<s)return o;n=o+1}else if(a>e)i=o-1;else throw new K("Input is not a number.");return 0}class Ur{constructor(e,r,n){this.type=e,this.input=r,this.labels=[],this.outputs=[];for(const[i,o]of n)this.labels.push(i),this.outputs.push(o)}static parse(e,r){if(e.length-1<4)return r.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!==0)return r.error("Expected an even number of arguments.");const n=r.parse(e[1],1,m);if(!n)return null;const i=[];let o=null;r.expectedType&&r.expectedType.kind!=="value"&&(o=r.expectedType);for(let a=1;a<e.length;a+=2){const s=a===1?-1/0:e[a],u=e[a+1],l=a,p=a+1;if(typeof s!="number")return r.error('Input/output pairs for "step" expressions must be defined using literal numeric values (not computed expressions) for the input values.',l);if(i.length&&i[i.length-1][0]>=s)return r.error('Input/output pairs for "step" expressions must be arranged with input values in strictly ascending order.',l);const c=r.parse(u,p,o);if(!c)return null;o=o||c.type,i.push([s,c])}return new Ur(o,n,i)}evaluate(e){const r=this.labels,n=this.outputs;if(r.length===1)return n[0].evaluate(e);const i=this.input.evaluate(e);if(i<=r[0])return n[0].evaluate(e);const o=r.length;if(i>=r[o-1])return n[o-1].evaluate(e);const a=Vn(r,i);return n[a].evaluate(e)}eachChild(e){e(this.input);for(const r of this.outputs)e(r)}outputDefined(){return this.outputs.every(e=>e.outputDefined())}serialize(){const e=["step",this.input.serialize()];for(let r=0;r<this.labels.length;r++)r>0&&e.push(this.labels[r]),e.push(this.outputs[r].serialize());return e}}var Gn=Ur,Zo=Ke;function Ke(t,e,r,n){this.cx=3*t,this.bx=3*(r-t)-this.cx,this.ax=1-this.cx-this.bx,this.cy=3*e,this.by=3*(n-e)-this.cy,this.ay=1-this.cy-this.by,this.p1x=t,this.p1y=n,this.p2x=r,this.p2y=n}Ke.prototype.sampleCurveX=function(t){return((this.ax*t+this.bx)*t+this.cx)*t};Ke.prototype.sampleCurveY=function(t){return((this.ay*t+this.by)*t+this.cy)*t};Ke.prototype.sampleCurveDerivativeX=function(t){return(3*this.ax*t+2*this.bx)*t+this.cx};Ke.prototype.solveCurveX=function(t,e){typeof e>"u"&&(e=1e-6);var r,n,i,o,a;for(i=t,a=0;a<8;a++){if(o=this.sampleCurveX(i)-t,Math.abs(o)<e)return i;var s=this.sampleCurveDerivativeX(i);if(Math.abs(s)<1e-6)break;i=i-o/s}if(r=0,n=1,i=t,i<r)return r;if(i>n)return n;for(;r<n;){if(o=this.sampleCurveX(i),Math.abs(o-t)<e)return i;t>o?r=i:n=i,i=(n-r)*.5+r}return i};Ke.prototype.solve=function(t,e){return this.sampleCurveY(this.solveCurveX(t,e))};var Bo=qn(Zo);function pe(t,e,r){return t*(1-r)+e*r}function Xo(t,e,r){return new ce(pe(t.r,e.r,r),pe(t.g,e.g,r),pe(t.b,e.b,r),pe(t.a,e.a,r))}function Wo(t,e,r){return t.map((n,i)=>pe(n,e[i],r))}var Ho=Object.freeze({__proto__:null,number:pe,color:Xo,array:Wo});const Jn=.95047,Zn=1,Bn=1.08883,Xn=4/29,Xe=6/29,Wn=3*Xe*Xe,Yo=Xe*Xe*Xe,Ko=Math.PI/180,Qo=180/Math.PI;function Qt(t){return t>Yo?Math.pow(t,1/3):t/Wn+Xn}function er(t){return t>Xe?t*t*t:Wn*(t-Xn)}function tr(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function rr(t){return t/=255,t<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Hn(t){const e=rr(t.r),r=rr(t.g),n=rr(t.b),i=Qt((.4124564*e+.3575761*r+.1804375*n)/Jn),o=Qt((.2126729*e+.7151522*r+.072175*n)/Zn),a=Qt((.0193339*e+.119192*r+.9503041*n)/Bn);return{l:116*o-16,a:500*(i-o),b:200*(o-a),alpha:t.a}}function Yn(t){let e=(t.l+16)/116,r=isNaN(t.a)?e:e+t.a/500,n=isNaN(t.b)?e:e-t.b/200;return e=Zn*er(e),r=Jn*er(r),n=Bn*er(n),new ce(tr(3.2404542*r-1.5371385*e-.4985314*n),tr(-.969266*r+1.8760108*e+.041556*n),tr(.0556434*r-.2040259*e+1.0572252*n),t.alpha)}function ea(t,e,r){return{l:pe(t.l,e.l,r),a:pe(t.a,e.a,r),b:pe(t.b,e.b,r),alpha:pe(t.alpha,e.alpha,r)}}function ta(t){const{l:e,a:r,b:n}=Hn(t),i=Math.atan2(n,r)*Qo;return{h:i<0?i+360:i,c:Math.sqrt(r*r+n*n),l:e,alpha:t.a}}function ra(t){const e=t.h*Ko,r=t.c,n=t.l;return Yn({l:n,a:Math.cos(e)*r,b:Math.sin(e)*r,alpha:t.alpha})}function na(t,e,r){const n=e-t;return t+r*(n>180||n<-180?n-360*Math.round(n/360):n)}function ia(t,e,r){return{h:na(t.h,e.h,r),c:pe(t.c,e.c,r),l:pe(t.l,e.l,r),alpha:pe(t.alpha,e.alpha,r)}}const zt={forward:Hn,reverse:Yn,interpolate:ea},kt={forward:ta,reverse:ra,interpolate:ia};class jt{constructor(e,r,n,i,o){this.type=e,this.operator=r,this.interpolation=n,this.input=i,this.labels=[],this.outputs=[];for(const[a,s]of o)this.labels.push(a),this.outputs.push(s)}static interpolationFactor(e,r,n,i){let o=0;if(e.name==="exponential")o=nr(r,e.base,n,i);else if(e.name==="linear")o=nr(r,1,n,i);else if(e.name==="cubic-bezier"){const a=e.controlPoints;o=new Bo(a[0],a[1],a[2],a[3]).solve(nr(r,1,n,i))}return o}static parse(e,r){let[n,i,o,...a]=e;if(!Array.isArray(i)||i.length===0)return r.error("Expected an interpolation type expression.",1);if(i[0]==="linear")i={name:"linear"};else if(i[0]==="exponential"){const l=i[1];if(typeof l!="number")return r.error("Exponential interpolation requires a numeric base.",1,1);i={name:"exponential",base:l}}else if(i[0]==="cubic-bezier"){const l=i.slice(1);if(l.length!==4||l.some(p=>typeof p!="number"||p<0||p>1))return r.error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.",1);i={name:"cubic-bezier",controlPoints:l}}else return r.error(`Unknown interpolation type ${String(i[0])}`,1,0);if(e.length-1<4)return r.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if((e.length-1)%2!==0)return r.error("Expected an even number of arguments.");if(o=r.parse(o,2,m),!o)return null;const s=[];let u=null;n==="interpolate-hcl"||n==="interpolate-lab"?u=Ee:r.expectedType&&r.expectedType.kind!=="value"&&(u=r.expectedType);for(let l=0;l<a.length;l+=2){const p=a[l],c=a[l+1],f=l+3,d=l+4;if(typeof p!="number")return r.error('Input/output pairs for "interpolate" expressions must be defined using literal numeric values (not computed expressions) for the input values.',f);if(s.length&&s[s.length-1][0]>=p)return r.error('Input/output pairs for "interpolate" expressions must be arranged with input values in strictly ascending order.',f);const y=r.parse(c,d,u);if(!y)return null;u=u||y.type,s.push([p,y])}return u.kind!=="number"&&u.kind!=="color"&&!(u.kind==="array"&&u.itemType.kind==="number"&&typeof u.N=="number")?r.error(`Type ${L(u)} is not interpolatable.`):new jt(u,n,i,o,s)}evaluate(e){const r=this.labels,n=this.outputs;if(r.length===1)return n[0].evaluate(e);const i=this.input.evaluate(e);if(i<=r[0])return n[0].evaluate(e);const o=r.length;if(i>=r[o-1])return n[o-1].evaluate(e);const a=Vn(r,i),s=r[a],u=r[a+1],l=jt.interpolationFactor(this.interpolation,i,s,u),p=n[a].evaluate(e),c=n[a+1].evaluate(e);return this.operator==="interpolate"?Ho[this.type.kind.toLowerCase()](p,c,l):this.operator==="interpolate-hcl"?kt.reverse(kt.interpolate(kt.forward(p),kt.forward(c),l)):zt.reverse(zt.interpolate(zt.forward(p),zt.forward(c),l))}eachChild(e){e(this.input);for(const r of this.outputs)e(r)}outputDefined(){return this.outputs.every(e=>e.outputDefined())}serialize(){let e;this.interpolation.name==="linear"?e=["linear"]:this.interpolation.name==="exponential"?this.interpolation.base===1?e=["linear"]:e=["exponential",this.interpolation.base]:e=["cubic-bezier"].concat(this.interpolation.controlPoints);const r=[this.operator,e,this.input.serialize()];for(let n=0;n<this.labels.length;n++)r.push(this.labels[n],this.outputs[n].serialize());return r}}function nr(t,e,r,n){const i=n-r,o=t-r;return i===0?0:e===1?o/i:(Math.pow(e,o)-1)/(Math.pow(e,i)-1)}var Re=jt;class qt{constructor(e,r){this.type=e,this.args=r}static parse(e,r){if(e.length<2)return r.error("Expectected at least one argument.");let n=null;const i=r.expectedType;i&&i.kind!=="value"&&(n=i);const o=[];for(const s of e.slice(1)){const u=r.parse(s,1+o.length,n,void 0,{typeAnnotation:"omit"});if(!u)return null;n=n||u.type,o.push(u)}return i&&o.some(s=>ht(i,s.type))?new qt(E,o):new qt(n,o)}evaluate(e){let r=null,n=0,i;for(const o of this.args){if(n++,r=o.evaluate(e),r&&r instanceof je&&!r.available&&(i||(i=r),r=null,n===this.args.length))return i;if(r!==null)break}return r}eachChild(e){this.args.forEach(e)}outputDefined(){return this.args.every(e=>e.outputDefined())}serialize(){const e=["coalesce"];return this.eachChild(r=>{e.push(r.serialize())}),e}}var Kn=qt;class Vr{constructor(e,r){this.type=r.type,this.bindings=[].concat(e),this.result=r}evaluate(e){return this.result.evaluate(e)}eachChild(e){for(const r of this.bindings)e(r[1]);e(this.result)}static parse(e,r){if(e.length<4)return r.error(`Expected at least 3 arguments, but found ${e.length-1} instead.`);const n=[];for(let o=1;o<e.length-1;o+=2){const a=e[o];if(typeof a!="string")return r.error(`Expected string, but found ${typeof a} instead.`,o);if(/[^a-zA-Z0-9_]/.test(a))return r.error("Variable names must contain only alphanumeric characters or '_'.",o);const s=r.parse(e[o+1],o+1);if(!s)return null;n.push([a,s])}const i=r.parse(e[e.length-1],e.length-1,r.expectedType,n);return i?new Vr(n,i):null}outputDefined(){return this.result.outputDefined()}serialize(){const e=["let"];for(const[r,n]of this.bindings)e.push(r,n.serialize());return e.push(this.result.serialize()),e}}var Qn=Vr;class Gr{constructor(e,r,n){this.type=e,this.index=r,this.input=n}static parse(e,r){if(e.length!==3)return r.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const n=r.parse(e[1],1,m),i=r.parse(e[2],2,be(r.expectedType||E));if(!n||!i)return null;const o=i.type;return new Gr(o.itemType,n,i)}evaluate(e){const r=this.index.evaluate(e),n=this.input.evaluate(e);if(r<0)throw new K(`Array index out of bounds: ${r} < 0.`);if(r>=n.length)throw new K(`Array index out of bounds: ${r} > ${n.length-1}.`);if(r!==Math.floor(r))throw new K(`Array index must be an integer, but found ${r} instead.`);return n[r]}eachChild(e){e(this.index),e(this.input)}outputDefined(){return!1}serialize(){return["at",this.index.serialize(),this.input.serialize()]}}var oa=Gr;class Jr{constructor(e,r){this.type=T,this.needle=e,this.haystack=r}static parse(e,r){if(e.length!==3)return r.error(`Expected 2 arguments, but found ${e.length-1} instead.`);const n=r.parse(e[1],1,E),i=r.parse(e[2],2,E);return!n||!i?null:Ir(n.type,[T,S,m,Nt,E])?new Jr(n,i):r.error(`Expected first argument to be of type boolean, string, number or null, but found ${L(n.type)} instead`)}evaluate(e){const r=this.needle.evaluate(e),n=this.haystack.evaluate(e);if(n==null)return!1;if(!yt(r,["boolean","string","number","null"]))throw new K(`Expected first argument to be of type boolean, string, number or null, but found ${L(X(r))} instead.`);if(!yt(n,["string","array"]))throw new K(`Expected second argument to be of type array or string, but found ${L(X(n))} instead.`);return n.indexOf(r)>=0}eachChild(e){e(this.needle),e(this.haystack)}outputDefined(){return!0}serialize(){return["in",this.needle.serialize(),this.haystack.serialize()]}}var aa=Jr;class At{constructor(e,r,n){this.type=m,this.needle=e,this.haystack=r,this.fromIndex=n}static parse(e,r){if(e.length<=2||e.length>=5)return r.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const n=r.parse(e[1],1,E),i=r.parse(e[2],2,E);if(!n||!i)return null;if(!Ir(n.type,[T,S,m,Nt,E]))return r.error(`Expected first argument to be of type boolean, string, number or null, but found ${L(n.type)} instead`);if(e.length===4){const o=r.parse(e[3],3,m);return o?new At(n,i,o):null}else return new At(n,i)}evaluate(e){const r=this.needle.evaluate(e),n=this.haystack.evaluate(e);if(!yt(r,["boolean","string","number","null"]))throw new K(`Expected first argument to be of type boolean, string, number or null, but found ${L(X(r))} instead.`);if(!yt(n,["string","array"]))throw new K(`Expected second argument to be of type array or string, but found ${L(X(n))} instead.`);if(this.fromIndex){const i=this.fromIndex.evaluate(e);return n.indexOf(r,i)}return n.indexOf(r)}eachChild(e){e(this.needle),e(this.haystack),this.fromIndex&&e(this.fromIndex)}outputDefined(){return!1}serialize(){if(this.fromIndex!=null&&this.fromIndex!==void 0){const e=this.fromIndex.serialize();return["index-of",this.needle.serialize(),this.haystack.serialize(),e]}return["index-of",this.needle.serialize(),this.haystack.serialize()]}}var sa=At;class Zr{constructor(e,r,n,i,o,a){this.inputType=e,this.type=r,this.input=n,this.cases=i,this.outputs=o,this.otherwise=a}static parse(e,r){if(e.length<5)return r.error(`Expected at least 4 arguments, but found only ${e.length-1}.`);if(e.length%2!==1)return r.error("Expected an even number of arguments.");let n,i;r.expectedType&&r.expectedType.kind!=="value"&&(i=r.expectedType);const o={},a=[];for(let l=2;l<e.length-1;l+=2){let p=e[l];const c=e[l+1];Array.isArray(p)||(p=[p]);const f=r.concat(l);if(p.length===0)return f.error("Expected at least one branch label.");for(const y of p){if(typeof y!="number"&&typeof y!="string")return f.error("Branch labels must be numbers or strings.");if(typeof y=="number"&&Math.abs(y)>Number.MAX_SAFE_INTEGER)return f.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);if(typeof y=="number"&&Math.floor(y)!==y)return f.error("Numeric branch labels must be integer values.");if(!n)n=X(y);else if(f.checkSubtype(n,X(y)))return null;if(typeof o[String(y)]<"u")return f.error("Branch labels must be unique.");o[String(y)]=a.length}const d=r.parse(c,l,i);if(!d)return null;i=i||d.type,a.push(d)}const s=r.parse(e[1],1,E);if(!s)return null;const u=r.parse(e[e.length-1],e.length-1,i);return!u||s.type.kind!=="value"&&r.concat(1).checkSubtype(n,s.type)?null:new Zr(n,i,s,o,a,u)}evaluate(e){const r=this.input.evaluate(e);return(X(r)===this.inputType&&this.outputs[this.cases[r]]||this.otherwise).evaluate(e)}eachChild(e){e(this.input),this.outputs.forEach(e),e(this.otherwise)}outputDefined(){return this.outputs.every(e=>e.outputDefined())&&this.otherwise.outputDefined()}serialize(){const e=["match",this.input.serialize()],r=Object.keys(this.cases).sort(),n=[],i={};for(const a of r){const s=i[this.cases[a]];s===void 0?(i[this.cases[a]]=n.length,n.push([this.cases[a],[a]])):n[s][1].push(a)}const o=a=>this.inputType.kind==="number"?Number(a):a;for(const[a,s]of n)s.length===1?e.push(o(s[0])):e.push(s.map(o)),e.push(this.outputs[a].serialize());return e.push(this.otherwise.serialize()),e}}var la=Zr;class Br{constructor(e,r,n){this.type=e,this.branches=r,this.otherwise=n}static parse(e,r){if(e.length<4)return r.error(`Expected at least 3 arguments, but found only ${e.length-1}.`);if(e.length%2!==0)return r.error("Expected an odd number of arguments.");let n;r.expectedType&&r.expectedType.kind!=="value"&&(n=r.expectedType);const i=[];for(let a=1;a<e.length-1;a+=2){const s=r.parse(e[a],a,T);if(!s)return null;const u=r.parse(e[a+1],a+1,n);if(!u)return null;i.push([s,u]),n=n||u.type}const o=r.parse(e[e.length-1],e.length-1,n);return o?new Br(n,i,o):null}evaluate(e){for(const[r,n]of this.branches)if(r.evaluate(e))return n.evaluate(e);return this.otherwise.evaluate(e)}eachChild(e){for(const[r,n]of this.branches)e(r),e(n);e(this.otherwise)}outputDefined(){return this.branches.every(([e,r])=>r.outputDefined())&&this.otherwise.outputDefined()}serialize(){const e=["case"];return this.eachChild(r=>{e.push(r.serialize())}),e}}var ua=Br;class Pt{constructor(e,r,n,i){this.type=e,this.input=r,this.beginIndex=n,this.endIndex=i}static parse(e,r){if(e.length<=2||e.length>=5)return r.error(`Expected 3 or 4 arguments, but found ${e.length-1} instead.`);const n=r.parse(e[1],1,E),i=r.parse(e[2],2,m);if(!n||!i)return null;if(!Ir(n.type,[be(E),S,E]))return r.error(`Expected first argument to be of type array or string, but found ${L(n.type)} instead`);if(e.length===4){const o=r.parse(e[3],3,m);return o?new Pt(n.type,n,i,o):null}else return new Pt(n.type,n,i)}evaluate(e){const r=this.input.evaluate(e),n=this.beginIndex.evaluate(e);if(!yt(r,["string","array"]))throw new K(`Expected first argument to be of type array or string, but found ${L(X(r))} instead.`);if(this.endIndex){const i=this.endIndex.evaluate(e);return r.slice(n,i)}return r.slice(n)}eachChild(e){e(this.input),e(this.beginIndex),this.endIndex&&e(this.endIndex)}outputDefined(){return!1}serialize(){if(this.endIndex!=null&&this.endIndex!==void 0){const e=this.endIndex.serialize();return["slice",this.input.serialize(),this.beginIndex.serialize(),e]}return["slice",this.input.serialize(),this.beginIndex.serialize()]}}var pa=Pt;function pn(t,e){return t==="=="||t==="!="?e.kind==="boolean"||e.kind==="string"||e.kind==="number"||e.kind==="null"||e.kind==="value":e.kind==="string"||e.kind==="number"||e.kind==="value"}function ca(t,e,r){return e===r}function fa(t,e,r){return e!==r}function da(t,e,r){return e<r}function ma(t,e,r){return e>r}function ha(t,e,r){return e<=r}function ya(t,e,r){return e>=r}function ei(t,e,r,n){return n.compare(e,r)===0}function ga(t,e,r,n){return!ei(t,e,r,n)}function ba(t,e,r,n){return n.compare(e,r)<0}function va(t,e,r,n){return n.compare(e,r)>0}function xa(t,e,r,n){return n.compare(e,r)<=0}function wa(t,e,r,n){return n.compare(e,r)>=0}function Qe(t,e,r){const n=t!=="=="&&t!=="!=";return class ti{constructor(o,a,s){this.type=T,this.lhs=o,this.rhs=a,this.collator=s,this.hasUntypedArgument=o.type.kind==="value"||a.type.kind==="value"}static parse(o,a){if(o.length!==3&&o.length!==4)return a.error("Expected two or three arguments.");const s=o[0];let u=a.parse(o[1],1,E);if(!u)return null;if(!pn(s,u.type))return a.concat(1).error(`"${s}" comparisons are not supported for type '${L(u.type)}'.`);let l=a.parse(o[2],2,E);if(!l)return null;if(!pn(s,l.type))return a.concat(2).error(`"${s}" comparisons are not supported for type '${L(l.type)}'.`);if(u.type.kind!==l.type.kind&&u.type.kind!=="value"&&l.type.kind!=="value")return a.error(`Cannot compare types '${L(u.type)}' and '${L(l.type)}'.`);n&&(u.type.kind==="value"&&l.type.kind!=="value"?u=new Te(l.type,[u]):u.type.kind!=="value"&&l.type.kind==="value"&&(l=new Te(u.type,[l])));let p=null;if(o.length===4){if(u.type.kind!=="string"&&l.type.kind!=="string"&&u.type.kind!=="value"&&l.type.kind!=="value")return a.error("Cannot use collator to compare non-string types.");if(p=a.parse(o[3],3,Ut),!p)return null}return new ti(u,l,p)}evaluate(o){const a=this.lhs.evaluate(o),s=this.rhs.evaluate(o);if(n&&this.hasUntypedArgument){const u=X(a),l=X(s);if(u.kind!==l.kind||!(u.kind==="string"||u.kind==="number"))throw new K(`Expected arguments for "${t}" to be (string, string) or (number, number), but found (${u.kind}, ${l.kind}) instead.`)}if(this.collator&&!n&&this.hasUntypedArgument){const u=X(a),l=X(s);if(u.kind!=="string"||l.kind!=="string")return e(o,a,s)}return this.collator?r(o,a,s,this.collator.evaluate(o)):e(o,a,s)}eachChild(o){o(this.lhs),o(this.rhs),this.collator&&o(this.collator)}outputDefined(){return!0}serialize(){const o=[t];return this.eachChild(a=>{o.push(a.serialize())}),o}}}const za=Qe("==",ca,ei),ka=Qe("!=",fa,ga),Ta=Qe("<",da,ba),Ea=Qe(">",ma,va),Ca=Qe("<=",ha,xa),Ma=Qe(">=",ya,wa);class Xr{constructor(e,r,n,i,o,a){this.type=S,this.number=e,this.locale=r,this.currency=n,this.unit=i,this.minFractionDigits=o,this.maxFractionDigits=a}static parse(e,r){if(e.length!==3)return r.error("Expected two arguments.");const n=r.parse(e[1],1,m);if(!n)return null;const i=e[2];if(typeof i!="object"||Array.isArray(i))return r.error("NumberFormat options argument must be an object.");let o=null;if(i.locale&&(o=r.parse(i.locale,1,S),!o))return null;let a=null;if(i.currency&&(a=r.parse(i.currency,1,S),!a))return null;let s=null;if(i.unit&&(s=r.parse(i.unit,1,S),!s))return null;let u=null;if(i["min-fraction-digits"]&&(u=r.parse(i["min-fraction-digits"],1,m),!u))return null;let l=null;return i["max-fraction-digits"]&&(l=r.parse(i["max-fraction-digits"],1,m),!l)?null:new Xr(n,o,a,s,u,l)}evaluate(e){return new Intl.NumberFormat(this.locale?this.locale.evaluate(e):[],{style:this.currency&&"currency"||this.unit&&"unit"||"decimal",currency:this.currency?this.currency.evaluate(e):void 0,unit:this.unit?this.unit.evaluate(e):void 0,minimumFractionDigits:this.minFractionDigits?this.minFractionDigits.evaluate(e):void 0,maximumFractionDigits:this.maxFractionDigits?this.maxFractionDigits.evaluate(e):void 0}).format(this.number.evaluate(e))}eachChild(e){e(this.number),this.locale&&e(this.locale),this.currency&&e(this.currency),this.unit&&e(this.unit),this.minFractionDigits&&e(this.minFractionDigits),this.maxFractionDigits&&e(this.maxFractionDigits)}outputDefined(){return!1}serialize(){const e={};return this.locale&&(e.locale=this.locale.serialize()),this.currency&&(e.currency=this.currency.serialize()),this.unit&&(e.unit=this.unit.serialize()),this.minFractionDigits&&(e["min-fraction-digits"]=this.minFractionDigits.serialize()),this.maxFractionDigits&&(e["max-fraction-digits"]=this.maxFractionDigits.serialize()),["number-format",this.number.serialize(),e]}}class Wr{constructor(e){this.type=m,this.input=e}static parse(e,r){if(e.length!==2)return r.error(`Expected 1 argument, but found ${e.length-1} instead.`);const n=r.parse(e[1],1);return n?n.type.kind!=="array"&&n.type.kind!=="string"&&n.type.kind!=="value"?r.error(`Expected argument of type string or array, but found ${L(n.type)} instead.`):new Wr(n):null}evaluate(e){const r=this.input.evaluate(e);if(typeof r=="string")return r.length;if(Array.isArray(r))return r.length;throw new K(`Expected value to be of type string or array, but found ${L(X(r))} instead.`)}eachChild(e){e(this.input)}outputDefined(){return!1}serialize(){const e=["length"];return this.eachChild(r=>{e.push(r.serialize())}),e}}var Sa=Wr;const ri={"==":za,"!=":ka,">":Ea,"<":Ta,">=":Ma,"<=":Ca,array:Te,at:oa,boolean:Te,case:ua,coalesce:Kn,collator:Zt,format:Gt,image:Jt,in:aa,"index-of":sa,interpolate:Re,"interpolate-hcl":Re,"interpolate-lab":Re,length:Sa,let:Qn,literal:_t,match:la,number:Te,"number-format":Xr,object:Te,slice:pa,step:Gn,string:Te,"to-boolean":Ge,"to-color":Ge,"to-number":Ge,"to-string":Ge,var:Nn,within:Dr};function cn(t,[e,r,n,i]){e=e.evaluate(t),r=r.evaluate(t),n=n.evaluate(t);const o=i?i.evaluate(t):1,a=Pn(e,r,n,o);if(a)throw new K(a);return new ce(e/255*o,r/255*o,n/255*o,o)}function fn(t,e){return t in e}function ir(t,e){const r=e[t];return typeof r>"u"?null:r}function Ia(t,e,r,n){for(;r<=n;){const i=r+n>>1;if(e[i]===t)return!0;e[i]>t?n=i-1:r=i+1}return!1}function Pe(t){return{type:t}}Ye.register(ri,{error:[Co,[S],(t,[e])=>{throw new K(e.evaluate(t))}],typeof:[S,[E],(t,[e])=>L(X(e.evaluate(t)))],"to-rgba":[be(m,4),[Ee],(t,[e])=>e.evaluate(t).toArray()],rgb:[Ee,[m,m,m],cn],rgba:[Ee,[m,m,m,m],cn],has:{type:T,overloads:[[[S],(t,[e])=>fn(e.evaluate(t),t.properties())],[[S,Be],(t,[e,r])=>fn(e.evaluate(t),r.evaluate(t))]]},get:{type:E,overloads:[[[S],(t,[e])=>ir(e.evaluate(t),t.properties())],[[S,Be],(t,[e,r])=>ir(e.evaluate(t),r.evaluate(t))]]},"feature-state":[E,[S],(t,[e])=>ir(e.evaluate(t),t.featureState||{})],properties:[Be,[],t=>t.properties()],"geometry-type":[S,[],t=>t.geometryType()],id:[E,[],t=>t.id()],zoom:[m,[],t=>t.globals.zoom],pitch:[m,[],t=>t.globals.pitch||0],"distance-from-center":[m,[],t=>t.distanceFromCenter()],"heatmap-density":[m,[],t=>t.globals.heatmapDensity||0],"line-progress":[m,[],t=>t.globals.lineProgress||0],"sky-radial-progress":[m,[],t=>t.globals.skyRadialProgress||0],accumulated:[E,[],t=>t.globals.accumulated===void 0?null:t.globals.accumulated],"+":[m,Pe(m),(t,e)=>{let r=0;for(const n of e)r+=n.evaluate(t);return r}],"*":[m,Pe(m),(t,e)=>{let r=1;for(const n of e)r*=n.evaluate(t);return r}],"-":{type:m,overloads:[[[m,m],(t,[e,r])=>e.evaluate(t)-r.evaluate(t)],[[m],(t,[e])=>-e.evaluate(t)]]},"/":[m,[m,m],(t,[e,r])=>e.evaluate(t)/r.evaluate(t)],"%":[m,[m,m],(t,[e,r])=>e.evaluate(t)%r.evaluate(t)],ln2:[m,[],()=>Math.LN2],pi:[m,[],()=>Math.PI],e:[m,[],()=>Math.E],"^":[m,[m,m],(t,[e,r])=>Math.pow(e.evaluate(t),r.evaluate(t))],sqrt:[m,[m],(t,[e])=>Math.sqrt(e.evaluate(t))],log10:[m,[m],(t,[e])=>Math.log(e.evaluate(t))/Math.LN10],ln:[m,[m],(t,[e])=>Math.log(e.evaluate(t))],log2:[m,[m],(t,[e])=>Math.log(e.evaluate(t))/Math.LN2],sin:[m,[m],(t,[e])=>Math.sin(e.evaluate(t))],cos:[m,[m],(t,[e])=>Math.cos(e.evaluate(t))],tan:[m,[m],(t,[e])=>Math.tan(e.evaluate(t))],asin:[m,[m],(t,[e])=>Math.asin(e.evaluate(t))],acos:[m,[m],(t,[e])=>Math.acos(e.evaluate(t))],atan:[m,[m],(t,[e])=>Math.atan(e.evaluate(t))],min:[m,Pe(m),(t,e)=>Math.min(...e.map(r=>r.evaluate(t)))],max:[m,Pe(m),(t,e)=>Math.max(...e.map(r=>r.evaluate(t)))],abs:[m,[m],(t,[e])=>Math.abs(e.evaluate(t))],round:[m,[m],(t,[e])=>{const r=e.evaluate(t);return r<0?-Math.round(-r):Math.round(r)}],floor:[m,[m],(t,[e])=>Math.floor(e.evaluate(t))],ceil:[m,[m],(t,[e])=>Math.ceil(e.evaluate(t))],"filter-==":[T,[S,E],(t,[e,r])=>t.properties()[e.value]===r.value],"filter-id-==":[T,[E],(t,[e])=>t.id()===e.value],"filter-type-==":[T,[S],(t,[e])=>t.geometryType()===e.value],"filter-<":[T,[S,E],(t,[e,r])=>{const n=t.properties()[e.value],i=r.value;return typeof n==typeof i&&n<i}],"filter-id-<":[T,[E],(t,[e])=>{const r=t.id(),n=e.value;return typeof r==typeof n&&r<n}],"filter->":[T,[S,E],(t,[e,r])=>{const n=t.properties()[e.value],i=r.value;return typeof n==typeof i&&n>i}],"filter-id->":[T,[E],(t,[e])=>{const r=t.id(),n=e.value;return typeof r==typeof n&&r>n}],"filter-<=":[T,[S,E],(t,[e,r])=>{const n=t.properties()[e.value],i=r.value;return typeof n==typeof i&&n<=i}],"filter-id-<=":[T,[E],(t,[e])=>{const r=t.id(),n=e.value;return typeof r==typeof n&&r<=n}],"filter->=":[T,[S,E],(t,[e,r])=>{const n=t.properties()[e.value],i=r.value;return typeof n==typeof i&&n>=i}],"filter-id->=":[T,[E],(t,[e])=>{const r=t.id(),n=e.value;return typeof r==typeof n&&r>=n}],"filter-has":[T,[E],(t,[e])=>e.value in t.properties()],"filter-has-id":[T,[],t=>t.id()!==null&&t.id()!==void 0],"filter-type-in":[T,[be(S)],(t,[e])=>e.value.indexOf(t.geometryType())>=0],"filter-id-in":[T,[be(E)],(t,[e])=>e.value.indexOf(t.id())>=0],"filter-in-small":[T,[S,be(E)],(t,[e,r])=>r.value.indexOf(t.properties()[e.value])>=0],"filter-in-large":[T,[S,be(E)],(t,[e,r])=>Ia(t.properties()[e.value],r.value,0,r.value.length-1)],all:{type:T,overloads:[[[T,T],(t,[e,r])=>e.evaluate(t)&&r.evaluate(t)],[Pe(T),(t,e)=>{for(const r of e)if(!r.evaluate(t))return!1;return!0}]]},any:{type:T,overloads:[[[T,T],(t,[e,r])=>e.evaluate(t)||r.evaluate(t)],[Pe(T),(t,e)=>{for(const r of e)if(r.evaluate(t))return!0;return!1}]]},"!":[T,[T],(t,[e])=>!e.evaluate(t)],"is-supported-script":[T,[S],(t,[e])=>{const r=t.globals&&t.globals.isSupportedScript;return r?r(e.evaluate(t)):!0}],upcase:[S,[S],(t,[e])=>e.evaluate(t).toUpperCase()],downcase:[S,[S],(t,[e])=>e.evaluate(t).toLowerCase()],concat:[S,Pe(E),(t,e)=>e.map(r=>ft(r.evaluate(t))).join("")],"resolved-locale":[S,[Ut],(t,[e])=>e.evaluate(t).resolvedLocale()]});var ni=ri;function gr(t){return{result:"success",value:t}}function Ve(t){return{result:"error",value:t}}function $a(t){return t["property-type"]==="data-driven"}function _a(t){return!!t.expression&&t.expression.parameters.indexOf("zoom")>-1}function Fa(t){return!!t.expression&&t.expression.interpolated}function ii(t){return typeof t=="object"&&t!==null&&!Array.isArray(t)}class ja{constructor(e,r){this.expression=e,this._warningHistory={},this._evaluator=new Dn,this._defaultValue=r?Da(r):null,this._enumValues=r&&r.type==="enum"?r.values:null}evaluateWithoutErrorHandling(e,r,n,i,o,a,s,u){return this._evaluator.globals=e,this._evaluator.feature=r,this._evaluator.featureState=n,this._evaluator.canonical=i||null,this._evaluator.availableImages=o||null,this._evaluator.formattedSection=a,this._evaluator.featureTileCoord=s||null,this._evaluator.featureDistanceData=u||null,this.expression.evaluate(this._evaluator)}evaluate(e,r,n,i,o,a,s,u){this._evaluator.globals=e,this._evaluator.feature=r||null,this._evaluator.featureState=n||null,this._evaluator.canonical=i||null,this._evaluator.availableImages=o||null,this._evaluator.formattedSection=a||null,this._evaluator.featureTileCoord=s||null,this._evaluator.featureDistanceData=u||null;try{const l=this.expression.evaluate(this._evaluator);if(l==null||typeof l=="number"&&l!==l)return this._defaultValue;if(this._enumValues&&!(l in this._enumValues))throw new K(`Expected value to be one of ${Object.keys(this._enumValues).map(p=>JSON.stringify(p)).join(", ")}, but found ${JSON.stringify(l)} instead.`);return l}catch(l){return this._warningHistory[l.message]||(this._warningHistory[l.message]=!0,typeof console<"u"&&console.warn(l.message)),this._defaultValue}}}function qa(t){return Array.isArray(t)&&t.length>0&&typeof t[0]=="string"&&t[0]in ni}function br(t,e){const r=new Un(ni,[],e?Pa(e):void 0),n=r.parse(t,void 0,void 0,void 0,e&&e.type==="string"?{typeAnnotation:"coerce"}:void 0);return n?gr(new ja(n,e)):Ve(r.errors)}class dn{constructor(e,r){this.kind=e,this._styleExpression=r,this.isStateDependent=e!=="constant"&&!Rr(r.expression)}evaluateWithoutErrorHandling(e,r,n,i,o,a){return this._styleExpression.evaluateWithoutErrorHandling(e,r,n,i,o,a)}evaluate(e,r,n,i,o,a){return this._styleExpression.evaluate(e,r,n,i,o,a)}}class mn{constructor(e,r,n,i){this.kind=e,this.zoomStops=n,this._styleExpression=r,this.isStateDependent=e!=="camera"&&!Rr(r.expression),this.interpolationType=i}evaluateWithoutErrorHandling(e,r,n,i,o,a){return this._styleExpression.evaluateWithoutErrorHandling(e,r,n,i,o,a)}evaluate(e,r,n,i,o,a){return this._styleExpression.evaluate(e,r,n,i,o,a)}interpolationFactor(e,r,n){return this.interpolationType?Re.interpolationFactor(this.interpolationType,e,r,n):0}}function Aa(t,e){if(t=br(t,e),t.result==="error")return t;const r=t.value.expression,n=Bt(r);if(!n&&!$a(e))return Ve([new xe("","data expressions not supported")]);const i=Lr(r,["zoom","pitch","distance-from-center"]);if(!i&&!_a(e))return Ve([new xe("","zoom expressions not supported")]);const o=Mt(r);if(!o&&!i)return Ve([new xe("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.')]);if(o instanceof xe)return Ve([o]);if(o instanceof Re&&!Fa(e))return Ve([new xe("",'"interpolate" expressions cannot be used with this property')]);if(!o)return gr(n?new dn("constant",t.value):new dn("source",t.value));const a=o instanceof Re?o.interpolation:void 0;return gr(n?new mn("camera",t.value,o.labels,a):new mn("composite",t.value,o.labels,a))}function Mt(t){let e=null;if(t instanceof Qn)e=Mt(t.result);else if(t instanceof Kn){for(const r of t.args)if(e=Mt(r),e)break}else(t instanceof Gn||t instanceof Re)&&t.input instanceof Ye&&t.input.name==="zoom"&&(e=t);return e instanceof xe||t.eachChild(r=>{const n=Mt(r);n instanceof xe?e=n:!e&&n?e=new xe("",'"zoom" expression may only be used as input to a top-level "step" or "interpolate" expression.'):e&&n&&e!==n&&(e=new xe("",'Only one zoom-based "step" or "interpolate" subexpression may be used in an expression.'))}),e}function Pa(t){const e={color:Ee,string:S,number:m,enum:S,boolean:T,formatted:Vt,resolvedImage:gt};return t.type==="array"?be(e[t.value]||E,t.length):e[t.type]}function Da(t){return t.type==="color"&&(ii(t.default)||Array.isArray(t.default))?new ce(0,0,0,0):t.type==="color"?ce.parse(t.default)||null:t.default===void 0?null:t.default}function Ra(t){return t instanceof Number||t instanceof String||t instanceof Boolean?t.valueOf():t}function vr(t){if(Array.isArray(t))return t.map(vr);if(t instanceof Object&&!(t instanceof Number||t instanceof String||t instanceof Boolean)){const e={};for(const r in t)e[r]=vr(t[r]);return e}return Ra(t)}var oi={$version:8,$root:{version:{required:!0,type:"enum",values:[8]},name:{type:"string"},metadata:{type:"*"},center:{type:"array",value:"number"},zoom:{type:"number"},bearing:{type:"number",default:0,period:360,units:"degrees"},pitch:{type:"number",default:0,units:"degrees"},light:{type:"light"},terrain:{type:"terrain"},fog:{type:"fog"},sources:{required:!0,type:"sources"},sprite:{type:"string"},glyphs:{type:"string"},transition:{type:"transition"},projection:{type:"projection"},layers:{required:!0,type:"array",value:"layer"}},sources:{"*":{type:"source"}},source:["source_vector","source_raster","source_raster_dem","source_geojson","source_video","source_image"],source_vector:{type:{required:!0,type:"enum",values:{vector:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},attribution:{type:"string"},promoteId:{type:"promoteId"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster:{type:{required:!0,type:"enum",values:{raster:{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},scheme:{type:"enum",values:{xyz:{},tms:{}},default:"xyz"},attribution:{type:"string"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_raster_dem:{type:{required:!0,type:"enum",values:{"raster-dem":{}}},url:{type:"string"},tiles:{type:"array",value:"string"},bounds:{type:"array",value:"number",length:4,default:[-180,-85.051129,180,85.051129]},minzoom:{type:"number",default:0},maxzoom:{type:"number",default:22},tileSize:{type:"number",default:512,units:"pixels"},attribution:{type:"string"},encoding:{type:"enum",values:{terrarium:{},mapbox:{}},default:"mapbox"},volatile:{type:"boolean",default:!1},"*":{type:"*"}},source_geojson:{type:{required:!0,type:"enum",values:{geojson:{}}},data:{type:"*"},maxzoom:{type:"number",default:18},attribution:{type:"string"},buffer:{type:"number",default:128,maximum:512,minimum:0},filter:{type:"*"},tolerance:{type:"number",default:.375},cluster:{type:"boolean",default:!1},clusterRadius:{type:"number",default:50,minimum:0},clusterMaxZoom:{type:"number"},clusterMinPoints:{type:"number"},clusterProperties:{type:"*"},lineMetrics:{type:"boolean",default:!1},generateId:{type:"boolean",default:!1},promoteId:{type:"promoteId"}},source_video:{type:{required:!0,type:"enum",values:{video:{}}},urls:{required:!0,type:"array",value:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},source_image:{type:{required:!0,type:"enum",values:{image:{}}},url:{required:!0,type:"string"},coordinates:{required:!0,type:"array",length:4,value:{type:"array",length:2,value:"number"}}},layer:{id:{type:"string",required:!0},type:{type:"enum",values:{fill:{},line:{},symbol:{},circle:{},heatmap:{},"fill-extrusion":{},raster:{},hillshade:{},background:{},sky:{}},required:!0},metadata:{type:"*"},source:{type:"string"},"source-layer":{type:"string"},minzoom:{type:"number",minimum:0,maximum:24},maxzoom:{type:"number",minimum:0,maximum:24},filter:{type:"filter"},layout:{type:"layout"},paint:{type:"paint"}},layout:["layout_fill","layout_line","layout_circle","layout_heatmap","layout_fill-extrusion","layout_symbol","layout_raster","layout_hillshade","layout_background","layout_sky"],layout_background:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_sky:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_fill:{"fill-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_circle:{"circle-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_heatmap:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},"layout_fill-extrusion":{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"},"fill-extrusion-edge-radius":{type:"number",private:!0,default:0,minimum:0,maximum:1,"property-type":"constant"}},layout_line:{"line-cap":{type:"enum",values:{butt:{},round:{},square:{}},default:"butt",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-join":{type:"enum",values:{bevel:{},round:{},miter:{}},default:"miter",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-miter-limit":{type:"number",default:2,requires:[{"line-join":"miter"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-round-limit":{type:"number",default:1.05,requires:[{"line-join":"round"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_symbol:{"symbol-placement":{type:"enum",values:{point:{},line:{},"line-center":{}},default:"point",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-spacing":{type:"number",default:250,minimum:1,units:"pixels",requires:[{"symbol-placement":"line"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"symbol-avoid-edges":{type:"boolean",default:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"symbol-sort-key":{type:"number",expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"symbol-z-order":{type:"enum",values:{auto:{},"viewport-y":{},source:{}},default:"auto",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-allow-overlap":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-ignore-placement":{type:"boolean",default:!1,requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-optional":{type:"boolean",default:!1,requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-size":{type:"number",default:1,minimum:0,units:"factor of the original icon size",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-text-fit":{type:"enum",values:{none:{},width:{},height:{},both:{}},default:"none",requires:["icon-image","text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-text-fit-padding":{type:"array",value:"number",length:4,default:[0,0,0,0],units:"pixels",requires:["icon-image","text-field",{"icon-text-fit":["both","width","height"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-image":{type:"resolvedImage",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-keep-upright":{type:"boolean",default:!1,requires:["icon-image",{"icon-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"icon-offset":{type:"array",value:"number",length:2,default:[0,0],requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"icon-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-pitch-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotation-alignment":{type:"enum",values:{map:{},viewport:{},auto:{}},default:"auto",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-field":{type:"formatted",default:"",tokens:!0,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"],requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-size":{type:"number",default:16,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-width":{type:"number",default:10,minimum:0,units:"ems",requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-line-height":{type:"number",default:1.2,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-letter-spacing":{type:"number",default:0,units:"ems",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-justify":{type:"enum",values:{auto:{},left:{},center:{},right:{}},default:"center",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-radial-offset":{type:"number",units:"ems",default:0,requires:["text-field"],"property-type":"data-driven",expression:{interpolated:!0,parameters:["zoom","feature"]}},"text-variable-anchor":{type:"array",value:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},requires:["text-field",{"symbol-placement":["point"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-anchor":{type:"enum",values:{center:{},left:{},right:{},top:{},bottom:{},"top-left":{},"top-right":{},"bottom-left":{},"bottom-right":{}},default:"center",requires:["text-field",{"!":"text-variable-anchor"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-max-angle":{type:"number",default:45,units:"degrees",requires:["text-field",{"symbol-placement":["line","line-center"]}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-writing-mode":{type:"array",value:"enum",values:{horizontal:{},vertical:{}},requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-rotate":{type:"number",default:0,period:360,units:"degrees",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-padding":{type:"number",default:2,minimum:0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-keep-upright":{type:"boolean",default:!0,requires:["text-field",{"text-rotation-alignment":"map"},{"symbol-placement":["line","line-center"]}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-transform":{type:"enum",values:{none:{},uppercase:{},lowercase:{}},default:"none",requires:["text-field"],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-offset":{type:"array",value:"number",units:"ems",length:2,default:[0,0],requires:["text-field",{"!":"text-radial-offset"}],expression:{interpolated:!0,parameters:["zoom","feature"]},"property-type":"data-driven"},"text-allow-overlap":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-ignore-placement":{type:"boolean",default:!1,requires:["text-field"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-optional":{type:"boolean",default:!1,requires:["text-field","icon-image"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_raster:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},layout_hillshade:{visibility:{type:"enum",values:{visible:{},none:{}},default:"visible","property-type":"constant"}},filter:{type:"array",value:"*"},filter_symbol:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature","pitch","distance-from-center"]}},filter_fill:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_line:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_circle:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},"filter_fill-extrusion":{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_heatmap:{type:"boolean",default:!1,transition:!1,"property-type":"data-driven",expression:{interpolated:!1,parameters:["zoom","feature"]}},filter_operator:{type:"enum",values:{"==":{},"!=":{},">":{},">=":{},"<":{},"<=":{},in:{},"!in":{},all:{},any:{},none:{},has:{},"!has":{},within:{}}},geometry_type:{type:"enum",values:{Point:{},LineString:{},Polygon:{}}},function:{expression:{type:"expression"},stops:{type:"array",value:"function_stop"},base:{type:"number",default:1,minimum:0},property:{type:"string",default:"$zoom"},type:{type:"enum",values:{identity:{},exponential:{},interval:{},categorical:{}},default:"exponential"},colorSpace:{type:"enum",values:{rgb:{},lab:{},hcl:{}},default:"rgb"},default:{type:"*",required:!1}},function_stop:{type:"array",minimum:0,maximum:24,value:["number","color"],length:2},expression:{type:"array",value:"*",minimum:1},expression_name:{type:"enum",values:{let:{group:"Variable binding"},var:{group:"Variable binding"},literal:{group:"Types"},array:{group:"Types"},at:{group:"Lookup"},in:{group:"Lookup"},"index-of":{group:"Lookup"},slice:{group:"Lookup"},case:{group:"Decision"},match:{group:"Decision"},coalesce:{group:"Decision"},step:{group:"Ramps, scales, curves"},interpolate:{group:"Ramps, scales, curves"},"interpolate-hcl":{group:"Ramps, scales, curves"},"interpolate-lab":{group:"Ramps, scales, curves"},ln2:{group:"Math"},pi:{group:"Math"},e:{group:"Math"},typeof:{group:"Types"},string:{group:"Types"},number:{group:"Types"},boolean:{group:"Types"},object:{group:"Types"},collator:{group:"Types"},format:{group:"Types"},image:{group:"Types"},"number-format":{group:"Types"},"to-string":{group:"Types"},"to-number":{group:"Types"},"to-boolean":{group:"Types"},"to-rgba":{group:"Color"},"to-color":{group:"Types"},rgb:{group:"Color"},rgba:{group:"Color"},get:{group:"Lookup"},has:{group:"Lookup"},length:{group:"Lookup"},properties:{group:"Feature data"},"feature-state":{group:"Feature data"},"geometry-type":{group:"Feature data"},id:{group:"Feature data"},zoom:{group:"Camera"},pitch:{group:"Camera"},"distance-from-center":{group:"Camera"},"heatmap-density":{group:"Heatmap"},"line-progress":{group:"Feature data"},"sky-radial-progress":{group:"sky"},accumulated:{group:"Feature data"},"+":{group:"Math"},"*":{group:"Math"},"-":{group:"Math"},"/":{group:"Math"},"%":{group:"Math"},"^":{group:"Math"},sqrt:{group:"Math"},log10:{group:"Math"},ln:{group:"Math"},log2:{group:"Math"},sin:{group:"Math"},cos:{group:"Math"},tan:{group:"Math"},asin:{group:"Math"},acos:{group:"Math"},atan:{group:"Math"},min:{group:"Math"},max:{group:"Math"},round:{group:"Math"},abs:{group:"Math"},ceil:{group:"Math"},floor:{group:"Math"},distance:{group:"Math"},"==":{group:"Decision"},"!=":{group:"Decision"},">":{group:"Decision"},"<":{group:"Decision"},">=":{group:"Decision"},"<=":{group:"Decision"},all:{group:"Decision"},any:{group:"Decision"},"!":{group:"Decision"},within:{group:"Decision"},"is-supported-script":{group:"String"},upcase:{group:"String"},downcase:{group:"String"},concat:{group:"String"},"resolved-locale":{group:"String"}}},fog:{range:{type:"array",default:[.5,10],minimum:-20,maximum:20,length:2,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"high-color":{type:"color","property-type":"data-constant",default:"#245cdf",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"space-color":{type:"color","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,"#010b19",7,"#367ab9"],expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"horizon-blend":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],4,.2,7,.1],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"star-intensity":{type:"number","property-type":"data-constant",default:["interpolate",["linear"],["zoom"],5,.35,6,0],minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},light:{anchor:{type:"enum",default:"viewport",values:{map:{},viewport:{}},"property-type":"data-constant",transition:!1,expression:{interpolated:!1,parameters:["zoom"]}},position:{type:"array",default:[1.15,210,30],length:3,value:"number","property-type":"data-constant",transition:!0,expression:{interpolated:!0,parameters:["zoom"]}},color:{type:"color","property-type":"data-constant",default:"#ffffff",expression:{interpolated:!0,parameters:["zoom"]},transition:!0},intensity:{type:"number","property-type":"data-constant",default:.5,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0}},projection:{name:{type:"enum",values:{albers:{},equalEarth:{},equirectangular:{},lambertConformalConic:{},mercator:{},naturalEarth:{},winkelTripel:{},globe:{}},default:"mercator",required:!0},center:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-180,-90],maximum:[180,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]},parallels:{type:"array",length:2,value:"number","property-type":"data-constant",minimum:[-90,-90],maximum:[90,90],transition:!1,requires:[{name:["albers","lambertConformalConic"]}]}},terrain:{source:{type:"string",required:!0},exaggeration:{type:"number","property-type":"data-constant",default:1,minimum:0,maximum:1e3,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["source"]}},paint:["paint_fill","paint_line","paint_circle","paint_heatmap","paint_fill-extrusion","paint_symbol","paint_raster","paint_hillshade","paint_background","paint_sky"],paint_fill:{"fill-antialias":{type:"boolean",default:!0,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-outline-color":{type:"color",transition:!0,requires:[{"!":"fill-pattern"},{"fill-antialias":!0}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"}},"paint_fill-extrusion":{"fill-extrusion-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"fill-extrusion-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["fill-extrusion-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"fill-extrusion-height":{type:"number",default:0,minimum:0,units:"meters",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-base":{type:"number",default:0,minimum:0,units:"meters",transition:!0,requires:["fill-extrusion-height"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"fill-extrusion-vertical-gradient":{type:"boolean",default:!0,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"fill-extrusion-ambient-occlusion-intensity":{"property-type":"data-constant",type:"number",private:!0,default:0,minimum:0,maximum:1,expression:{interpolated:!0,parameters:["zoom"]},transition:!0},"fill-extrusion-ambient-occlusion-radius":{"property-type":"data-constant",type:"number",private:!0,default:3,minimum:0,expression:{interpolated:!0,parameters:["zoom"]},transition:!0,requires:["fill-extrusion-edge-radius"]}},paint_line:{"line-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"line-pattern"}],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"line-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["line-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"line-width":{type:"number",default:1,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-gap-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-offset":{type:"number",default:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"line-dasharray":{type:"array",value:"number",minimum:0,transition:!1,units:"line widths",requires:[{"!":"line-pattern"}],expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom","feature"]},"property-type":"data-driven"},"line-gradient":{type:"color",transition:!1,requires:[{"!":"line-pattern"},{source:"geojson",has:{lineMetrics:!0}}],expression:{interpolated:!0,parameters:["line-progress"]},"property-type":"color-ramp"},"line-trim-offset":{type:"array",value:"number",length:2,default:[0,0],minimum:[0,0],maximum:[1,1],transition:!1,requires:[{source:"geojson",has:{lineMetrics:!0}}],"property-type":"constant"}},paint_circle:{"circle-radius":{type:"number",default:5,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-blur":{type:"number",default:0,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"circle-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["circle-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-scale":{type:"enum",values:{map:{},viewport:{}},default:"map",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-pitch-alignment":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"circle-stroke-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"circle-stroke-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"}},paint_heatmap:{"heatmap-radius":{type:"number",default:30,minimum:1,transition:!0,units:"pixels",expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-weight":{type:"number",default:1,minimum:0,transition:!1,expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"heatmap-intensity":{type:"number",default:1,minimum:0,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"heatmap-color":{type:"color",default:["interpolate",["linear"],["heatmap-density"],0,"rgba(0, 0, 255, 0)",.1,"royalblue",.3,"cyan",.5,"lime",.7,"yellow",1,"red"],transition:!1,expression:{interpolated:!0,parameters:["heatmap-density"]},"property-type":"color-ramp"},"heatmap-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_symbol:{"icon-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-color":{type:"color",default:"#000000",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"icon-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["icon-image"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"icon-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["icon-image","icon-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"text-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-color":{type:"color",default:"#000000",transition:!0,overridable:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-color":{type:"color",default:"rgba(0, 0, 0, 0)",transition:!0,requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-width":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-halo-blur":{type:"number",default:0,minimum:0,transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom","feature","feature-state"]},"property-type":"data-driven"},"text-translate":{type:"array",value:"number",length:2,default:[0,0],transition:!0,units:"pixels",requires:["text-field"],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"text-translate-anchor":{type:"enum",values:{map:{},viewport:{}},default:"map",requires:["text-field","text-translate"],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"}},paint_raster:{"raster-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-hue-rotate":{type:"number",default:0,period:360,transition:!0,units:"degrees",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-min":{type:"number",default:0,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-brightness-max":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-saturation":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-contrast":{type:"number",default:0,minimum:-1,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"raster-resampling":{type:"enum",values:{linear:{},nearest:{}},default:"linear",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"raster-fade-duration":{type:"number",default:300,minimum:0,transition:!1,units:"milliseconds",expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_hillshade:{"hillshade-illumination-direction":{type:"number",default:335,minimum:0,maximum:359,transition:!1,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-illumination-anchor":{type:"enum",values:{map:{},viewport:{}},default:"viewport",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-exaggeration":{type:"number",default:.5,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-shadow-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-highlight-color":{type:"color",default:"#FFFFFF",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"hillshade-accent-color":{type:"color",default:"#000000",transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_background:{"background-color":{type:"color",default:"#000000",transition:!0,requires:[{"!":"background-pattern"}],expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"},"background-pattern":{type:"resolvedImage",transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"background-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},paint_sky:{"sky-type":{type:"enum",values:{gradient:{},atmosphere:{}},default:"atmosphere",expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun":{type:"array",value:"number",length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,requires:[{"sky-type":"atmosphere"}],expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-atmosphere-sun-intensity":{type:"number",requires:[{"sky-type":"atmosphere"}],default:10,minimum:0,maximum:100,transition:!1,"property-type":"data-constant"},"sky-gradient-center":{type:"array",requires:[{"sky-type":"gradient"}],value:"number",default:[0,0],length:2,units:"degrees",minimum:[0,0],maximum:[360,180],transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient-radius":{type:"number",requires:[{"sky-type":"gradient"}],default:90,minimum:0,maximum:180,transition:!1,expression:{interpolated:!1,parameters:["zoom"]},"property-type":"data-constant"},"sky-gradient":{type:"color",default:["interpolate",["linear"],["sky-radial-progress"],.8,"#87ceeb",1,"white"],transition:!1,requires:[{"sky-type":"gradient"}],expression:{interpolated:!0,parameters:["sky-radial-progress"]},"property-type":"color-ramp"},"sky-atmosphere-halo-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-atmosphere-color":{type:"color",default:"white",transition:!1,requires:[{"sky-type":"atmosphere"}],"property-type":"data-constant"},"sky-opacity":{type:"number",default:1,minimum:0,maximum:1,transition:!0,expression:{interpolated:!0,parameters:["zoom"]},"property-type":"data-constant"}},transition:{duration:{type:"number",default:300,minimum:0,units:"milliseconds"},delay:{type:"number",default:0,minimum:0,units:"milliseconds"}},"property-type":{"data-driven":{type:"property-type"},"color-ramp":{type:"property-type"},"data-constant":{type:"property-type"},constant:{type:"property-type"}},promoteId:{"*":{type:"string"}}};function ai(t){if(t===!0||t===!1)return!0;if(!Array.isArray(t)||t.length===0)return!1;switch(t[0]){case"has":return t.length>=2&&t[1]!=="$id"&&t[1]!=="$type";case"in":return t.length>=3&&(typeof t[1]!="string"||Array.isArray(t[2]));case"!in":case"!has":case"none":return!1;case"==":case"!=":case">":case">=":case"<":case"<=":return t.length!==3||Array.isArray(t[1])||Array.isArray(t[2]);case"any":case"all":for(const e of t.slice(1))if(!ai(e)&&typeof e!="boolean")return!1;return!0;default:return!0}}function La(t,e="fill"){if(t==null)return{filter:()=>!0,needGeometry:!1,needFeature:!1};ai(t)||(t=Dt(t));const r=t;let n=!0;try{n=Oa(r)}catch{console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.
This is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md
and paste the contents of this message in the report.
Thank you!
Filter Expression:
${JSON.stringify(r,null,2)}
        `)}const i=oi[`filter_${e}`],o=br(n,i);let a=null;if(o.result==="error")throw new Error(o.value.map(p=>`${p.key}: ${p.message}`).join(", "));a=(p,c,f)=>o.value.evaluate(p,c,{},f);let s=null,u=null;if(n!==r){const p=br(r,i);if(p.result==="error")throw new Error(p.value.map(c=>`${c.key}: ${c.message}`).join(", "));s=(c,f,d,y,C)=>p.value.evaluate(c,f,{},d,void 0,void 0,y,C),u=!Bt(p.value.expression)}a=a;const l=ui(n);return{filter:a,dynamicFilter:s||void 0,needGeometry:l,needFeature:!!u}}function Oa(t){if(!We(t))return t;let e=vr(t);return li(e),e=si(e),e}function si(t){if(!Array.isArray(t))return t;const e=Va(t);return e===!0?e:e.map(r=>si(r))}function li(t){let e=!1;const r=[];if(t[0]==="case"){for(let n=1;n<t.length-1;n+=2)e=e||We(t[n]),r.push(t[n+1]);r.push(t[t.length-1])}else if(t[0]==="match"){e=e||We(t[1]);for(let n=2;n<t.length-1;n+=2)r.push(t[n+1]);r.push(t[t.length-1])}else if(t[0]==="step"){e=e||We(t[1]);for(let n=1;n<t.length-1;n+=2)r.push(t[n+1])}e&&(t.length=0,t.push("any",...r));for(let n=1;n<t.length;n++)li(t[n])}function We(t){if(!Array.isArray(t))return!1;if(Na(t[0]))return!0;for(let e=1;e<t.length;e++){const r=t[e];if(We(r))return!0}return!1}function Na(t){return t==="pitch"||t==="distance-from-center"}const Ua=new Set(["in","==","!=",">",">=","<","<=","to-boolean"]);function Va(t){if(Ua.has(t[0]))for(let e=1;e<t.length;e++){const r=t[e];if(We(r))return!0}return t}function Ga(t,e){return t<e?-1:t>e?1:0}function ui(t){if(!Array.isArray(t))return!1;if(t[0]==="within")return!0;for(let e=1;e<t.length;e++)if(ui(t[e]))return!0;return!1}function Dt(t){if(!t)return!0;const e=t[0];return t.length<=1?e!=="any":e==="=="?or(t[1],t[2],"=="):e==="!="?Tt(or(t[1],t[2],"==")):e==="<"||e===">"||e==="<="||e===">="?or(t[1],t[2],e):e==="any"?Ja(t.slice(1)):e==="all"?["all"].concat(t.slice(1).map(Dt)):e==="none"?["all"].concat(t.slice(1).map(Dt).map(Tt)):e==="in"?hn(t[1],t.slice(2)):e==="!in"?Tt(hn(t[1],t.slice(2))):e==="has"?yn(t[1]):e==="!has"?Tt(yn(t[1])):e==="within"?t:!0}function or(t,e,r){switch(t){case"$type":return[`filter-type-${r}`,e];case"$id":return[`filter-id-${r}`,e];default:return[`filter-${r}`,t,e]}}function Ja(t){return["any"].concat(t.map(Dt))}function hn(t,e){if(e.length===0)return!1;switch(t){case"$type":return["filter-type-in",["literal",e]];case"$id":return["filter-id-in",["literal",e]];default:return e.length>200&&!e.some(r=>typeof r!=typeof e[0])?["filter-in-large",t,["literal",e.sort(Ga)]]:["filter-in-small",t,["literal",e]]}}function yn(t){switch(t){case"$type":return!0;case"$id":return["filter-has-id"];default:return["filter-has",t]}}function Tt(t){return["!",t]}var Za=["type","source","source-layer","minzoom","maxzoom","filter","layout"];function Ba(t,e){const r={};for(const n in t)n!=="ref"&&(r[n]=t[n]);return Za.forEach(n=>{n in e&&(r[n]=e[n])}),r}function pi(t){t=t.slice();const e=Object.create(null);for(let r=0;r<t.length;r++)e[t[r].id]=t[r];for(let r=0;r<t.length;r++)"ref"in t[r]&&(t[r]=Ba(t[r],e[t[r].ref]));return t}var gn={thin:100,hairline:100,"ultra-light":100,"extra-light":100,light:200,book:300,regular:400,normal:400,plain:400,roman:400,standard:400,medium:500,"semi-bold":600,"demi-bold":600,bold:700,heavy:800,black:800,"extra-bold":800,"ultra-black":900,"extra-black":900,"ultra-bold":900,"heavy-black":900,fat:900,poster:900},lt=" ",bn=/(italic|oblique)$/i,vn={},Xa=function(t,e,r){var n=vn[t];if(!n){Array.isArray(t)||(t=[t]);for(var i=400,o="normal",a=[],s,u,l=0,p=t.length;l<p;++l){var c=t[l],f=c.split(" "),d=f[f.length-1].toLowerCase();d=="normal"||d=="italic"||d=="oblique"?(o=u?o:d,f.pop(),d=f[f.length-1].toLowerCase()):bn.test(d)&&(d=d.replace(bn,""),o=u?o:f[f.length-1].replace(d,""));for(var y in gn){var C=f.length>1?f[f.length-2].toLowerCase():"";if(d==y||d==y.replace("-","")||C+"-"+d==y){i=s?i:gn[y],f.pop(),C&&y.startsWith(C)&&f.pop();break}}!s&&typeof d=="number"&&(i=d);var g=f.join(lt).replace("Klokantech Noto Sans","Noto Sans");g.indexOf(lt)!==-1&&(g='"'+g+'"'),a.push(g)}n=vn[t]=[o,i,a]}return n[0]+lt+n[1]+lt+e+"px"+(r?"/"+r:"")+lt+n[2]},xr=qn(Xa);const ci="https://api.mapbox.com";function Hr(t){const e="mapbox://";return t.indexOf(e)!==0?"":t.slice(e.length)}function Wa(t,e,r){const n=Hr(t);if(!n)return decodeURI(new URL(t,r).href);const i="sprites/";if(n.indexOf(i)!==0)throw new Error(`unexpected sprites url: ${t}`);const o=n.slice(i.length);return`${ci}/styles/v1/${o}/sprite?access_token=${e}`}function Rt(t,e){const r=Hr(t);if(!r)return decodeURI(new URL(t,location.href).href);const n="styles/";if(r.indexOf(n)!==0)throw new Error(`unexpected style url: ${t}`);const i=r.slice(n.length);return`${ci}/styles/v1/${i}?&access_token=${e}`}function St(t,e,r,n){const i=new URL(t,n),o=Hr(t);if(!o)return e&&(i.searchParams.has(r)||i.searchParams.set(r,e)),decodeURI(i.href);if(o==="mapbox.satellite"){const a=window.devicePixelRatio>=1.5?"@2x":"";return`https://api.mapbox.com/v4/${o}/{z}/{x}/{y}${a}.webp?access_token=${e}`}return`https://{a-d}.tiles.mapbox.com/v4/${o}/{z}/{x}/{y}.vector.pbf?access_token=${e}`}const xn={},wn={};let Ha=0;function Yr(t){return t.id||(t.id=Ha++),t.id}function Ya(t,e){return Yr(t)+"."+Oi(e)}function fi(t){let e=xn[t.id];return e||(e={},xn[Yr(t)]=e),e}function Ka(t){let e=wn[t.id];return e||(e={},wn[Yr(t)]=e),e}function ar(t){return t*Math.PI/180}const Fe=function(){const t=[];for(let e=78271.51696402048;t.length<=24;e/=2)t.push(e);return t}(),sr=new _n({extent:_e("EPSG:3857").getExtent(),resolutions:Fe});function di(t,e){if(typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof OffscreenCanvas<"u")return new OffscreenCanvas(t,e);const r=document.createElement("canvas");return r.width=t,r.height=e,r}function Kr(t,e){let r=0;const n=e.length;for(;r<n;++r)if(e[r]<t&&r+1<n){const o=e[r]/e[r+1];return r+Math.log(e[r]/t)/Math.log(o)}return n-1}const Ue={};function He(t,e,r={},n){if(e in Ue)return n&&(n.request=Ue[e][0]),Ue[e][1];const i=r.transformRequest&&r.transformRequest(e,t)||e,o=It(()=>i).then(a=>(a instanceof Request||(a=new Request(a)),a.headers.get("Accept")||a.headers.set("Accept","application/json"),n&&(n.request=a),fetch(a).then(function(s){return delete Ue[e],s.ok?s.json():Promise.reject(new Error("Error fetching source "+e))}).catch(function(s){return delete Ue[e],Promise.reject(new Error("Error fetching source "+e))})));return Ue[e]=[i,o],o}function mi(t,e){if(typeof t=="string")if(t.trim().startsWith("{"))try{const r=JSON.parse(t);return Promise.resolve(r)}catch(r){return Promise.reject(r)}else return t=Rt(t,e.accessToken),He("Style",t,e);else return Promise.resolve(t)}const zn={};function hi(t,e,r={}){const n=[e,JSON.stringify(t)].toString();let i=zn[n];if(!i||r.transformRequest){let o;r.transformRequest&&(o=(s,u)=>{const l=r.transformRequest&&r.transformRequest(u,"Tiles")||u;if(s instanceof to)s.setLoader((p,c,f)=>{It(()=>l).then(d=>{fetch(d).then(y=>y.arrayBuffer()).then(y=>{const g=s.getFormat().readFeatures(y,{extent:p,featureProjection:f});s.setFeatures(g)}).catch(y=>s.setState(tn.ERROR))})});else{const p=s.getImage();It(()=>l).then(c=>{c instanceof Request?fetch(c).then(f=>f.blob()).then(f=>{const d=URL.createObjectURL(f);p.addEventListener("load",()=>URL.revokeObjectURL(d)),p.addEventListener("error",()=>URL.revokeObjectURL(d)),p.src=d}).catch(f=>s.setState(tn.ERROR)):p.src=c})}});const a=t.url;if(a&&!t.tiles){const s=St(a,r.accessToken,r.accessTokenParam||"access_token",e||location.href);if(a.startsWith("mapbox://"))i=Promise.resolve({tileJson:Object.assign({},t,{url:void 0,tiles:Zi(s)}),tileLoadFunction:o});else{const u={};i=He("Source",s,r,u).then(function(l){return l.tiles=l.tiles.map(function(p){return l.scheme==="tms"&&(p=p.replace("{y}","{-y}")),St(p,r.accessToken,r.accessTokenParam||"access_token",u.request.url)}),Promise.resolve({tileJson:l,tileLoadFunction:o})})}}else t=Object.assign({},t,{tiles:t.tiles.map(function(s){return t.scheme==="tms"&&(s=s.replace("{y}","{-y}")),St(s,r.accessToken,r.accessTokenParam||"access_token",e||location.href)})}),i=Promise.resolve({tileJson:Object.assign({},t),tileLoadFunction:o});zn[n]=i}return i}function kn(t,e,r,n){const i=document.createElement("canvas"),o=[2*r*e.pixelRatio+e.width,2*r*e.pixelRatio+e.height];i.width=o[0],i.height=o[1];const a=i.getContext("2d");a.drawImage(t,e.x,e.y,e.width,e.height,r*e.pixelRatio,r*e.pixelRatio,e.width,e.height);const s=a.getImageData(0,0,o[0],o[1]);a.globalCompositeOperation="destination-over",a.fillStyle=`rgba(${n.r*255},${n.g*255},${n.b*255},${n.a})`;const u=s.data;for(let l=0,p=s.width;l<p;++l)for(let c=0,f=s.height;c<f;++c){const d=(c*p+l)*4;u[d+3]>0&&a.arc(l,c,r*e.pixelRatio,0,2*Math.PI)}return a.fill(),i}function Qa(t,e,r){const n=Math.max(0,Math.min(1,(r-t)/(e-t)));return n*n*(3-2*n)}function Tn(t,e,r){const n=document.createElement("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(t,e.x,e.y,e.width,e.height,0,0,e.width,e.height);const o=i.getImageData(0,0,e.width,e.height),a=o.data;for(let s=0,u=o.width;s<u;++s)for(let l=0,p=o.height;l<p;++l){const c=(l*u+s)*4,f=a[c+3]/255,d=.75,y=.1,C=Qa(d-y,d+y,f);C>0?(a[c+0]=Math.round(255*r.r*C),a[c+1]=Math.round(255*r.g*C),a[c+2]=Math.round(255*r.b*C),a[c+3]=Math.round(255*C)):a[c+3]=0}return i.putImageData(o,0,0),n}const es=Array(256).join(" ");function wr(t,e){if(e>=.05){let r="";const n=t.split(`
`),i=es.slice(0,Math.round(e/.1));for(let o=0,a=n.length;o<a;++o)o>0&&(r+=`
`),r+=n[o].split("").join(i);return r}return t}let lr;function yi(){return lr||(lr=di(1,1).getContext("2d")),lr}function De(t,e){return yi().measureText(t).width+(t.length-1)*e}const En={};function zr(t,e,r,n){if(t.indexOf(`
`)!==-1){const a=t.split(`
`),s=[];for(let u=0,l=a.length;u<l;++u)s.push(zr(a[u],e,r,n));return s.join(`
`)}const i=r+","+e+","+t+","+n;let o=En[i];if(!o){const a=t.split(" ");if(a.length>1){const s=yi();s.font=e;const l=s.measureText("M").width*r;let p="";const c=[];for(let f=0,d=a.length;f<d;++f){const y=a[f],C=p+(p?" ":"")+y;De(C,n)<=l?p=C:(p&&c.push(p),p=y)}p&&c.push(p);for(let f=0,d=c.length;f<d&&d>1;++f){const y=c[f];if(De(y,n)<l*.35){const C=f>0?De(c[f-1],n):1/0,g=f<d-1?De(c[f+1],n):1/0;c.splice(f,1),d-=1,C<g?(c[f-1]+=" "+y,f-=1):c[f]=y+" "+c[f]}}for(let f=0,d=c.length-1;f<d;++f){const y=c[f],C=c[f+1];if(De(y,n)>l*.7&&De(C,n)<l*.6){const g=y.split(" "),W=g.pop();De(W,n)<l*.2&&(c[f]=g.join(" "),c[f+1]=W+" "+C),d-=1}}o=c.join(`
`)}else o=t;o=wr(o,n),En[i]=o}return o}const ts=/font-family: ?([^;]*);/,rs=/("|')/g;let Et;function ns(t){if(!Et){Et={};const e=document.styleSheets;for(let r=0,n=e.length;r<n;++r){const i=e[r];try{const o=i.rules||i.cssRules;if(o)for(let a=0,s=o.length;a<s;++a){const u=o[a];if(u.type==5){const l=u.cssText.match(ts);Et[l[1].replace(rs,"")]=!0}}}catch{}}}return t in Et}const ur={};function is(t,e="https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css"){const r=t.toString();if(r in ur)return ur[r];const n=[];for(let i=0,o=t.length;i<o;++i){t[i]=t[i].replace("Arial Unicode MS","Arial");const a=t[i],s=xr(a,1);Pi(s);const u=s.split(" ");n.push([u.slice(3).join(" ").replace(/"/g,""),u[1],u[0]])}for(let i=0,o=n.length;i<o;++i){const a=n[i],s=a[0];if(!ns(s)&&Di.get(`${a[2]}
${a[1]} 
${s}`)!==100){const u=e.replace("{font-family}",s.replace(/ /g,"-").toLowerCase()).replace("{Font+Family}",s.replace(/ /g,"+")).replace("{fontweight}",a[1]).replace("{-fontstyle}",a[2].replace("normal","").replace(/(.+)/,"-$1")).replace("{fontstyle}",a[2]);if(!document.querySelector('link[href="'+u+'"]')){const l=document.createElement("link");l.href=u,l.rel="stylesheet",document.head.appendChild(l)}}}return ur[r]=t,t}const os={Point:1,MultiPoint:1,LineString:2,MultiLineString:2,Polygon:3,MultiPolygon:3},as={center:[.5,.5],left:[0,.5],right:[1,.5],top:[.5,0],bottom:[.5,1],"top-left":[0,0],"top-right":[1,0],"bottom-left":[0,1],"bottom-right":[1,1]},ss=function(t,e){const r=Aa(t,e);if(r.result==="error")throw new Error(r.value.map(n=>`${n.key}: ${n.message}`).join(", "));return r.value},kr={},Lt={zoom:0};let Ct,pr;function w(t,e,r,n,i,o,a){const s=t.id;o||(o={},console.warn("No functionCache provided to getValue()")),o[s]||(o[s]={});const u=o[s];if(!u[r]){let l=(t[e]||kr)[r];const p=oi[`${e}_${t.type}`][r];l===void 0&&(l=p.default);let c=qa(l);if(!c&&ii(l)&&(l=bo(l,p),c=!0),c){const f=ss(l,p);u[r]=f.evaluate.bind(f)}else p.type=="color"&&(l=ce.parse(l)),u[r]=function(){return l}}return Lt.zoom=n,u[r](Lt,i,a)}function Cn(t,e,r,n,i){return w(t,"layout",`${n}-allow-overlap`,e,r,i)?w(t,"layout",`${n}-ignore-placement`,e,r,i)?"none":"obstacle":"declutter"}function ls(t,e,r,n,i){return i||console.warn("No filterCache provided to evaluateFilter()"),t in i||(i[t]=La(e).filter),Lt.zoom=n,i[t](Lt,r)}function Se(t,e){if(t){if(t.a===0||e===0)return;const r=t.a;return e=e===void 0?1:e,r===0?"transparent":"rgba("+Math.round(t.r*255/r)+","+Math.round(t.g*255/r)+","+Math.round(t.b*255/r)+","+r*e+")"}return t}const us=/\{[^{}}]*\}/g;function cr(t,e){return t.replace(us,function(r){return e[r.slice(1,-1)]||""})}const ps={};function cs(t,e,r,n=Fe,i=void 0,o=void 0,a=void 0,s=void 0){if(typeof e=="string"&&(e=JSON.parse(e)),e.version!=8)throw new Error("glStyle version 8 required.");ps[Ya(e,t)]=Array.from(arguments);let u,l,p;if(o){if(typeof Image<"u"){const k=new Image;let I;It(()=>o).then(R=>{R instanceof Request?fetch(R).then(Q=>Q.blob()).then(Q=>{I=URL.createObjectURL(Q),k.src=I}).catch(()=>{}):(k.crossOrigin="anonymous",k.src=R,I&&URL.revokeObjectURL(I))}),k.onload=function(){u=k,l=[k.width,k.height],t.changed(),k.onload=null}}else if(typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope){const k=self;k.postMessage({action:"loadImage",src:o}),k.addEventListener("message",function(R){R.data.action==="imageLoaded"&&R.data.src===o&&(u=R.data.image,l=[u.width,u.height])})}}const c=pi(e.layers),f={},d=[],y={},C={},g=fi(e),W=Ka(e);let G;for(let k=0,I=c.length;k<I;++k){const R=c[k],Q=R.id;if(typeof r=="string"&&R.source==r||Array.isArray(r)&&r.indexOf(Q)!==-1){const _=R["source-layer"];if(G){if(R.source!==G)throw new Error(`Layer "${Q}" does not use source "${G}`)}else{G=R.source;const B=e.sources[G];if(!B)throw new Error(`Source "${G}" is not defined`);const x=B.type;if(x!=="vector"&&x!=="geojson")throw new Error(`Source "${G}" is not of type "vector" or "geojson", but "${x}"`)}let v=f[_];v||(v=[],f[_]=v),v.push({layer:R,index:k}),d.push(Q)}}const ve=new vt,P=new xt,M=[],q=function(k,I,R){const Q=k.getProperties(),_=f[Q.layer];if(!_)return;let v=n.indexOf(I);v==-1&&(v=Kr(I,n));const B=os[k.getGeometry().getType()],x={id:k.getId(),properties:Q,type:B},z=t.get("mapbox-featurestate")[k.getId()];let A=-1;for(let te=0,qe=_.length;te<qe;++te){const Ce=_[te],h=Ce.layer,Ae=h.id;if(R!==void 0&&R!==Ae)continue;const ze=h.layout||kr,le=h.paint||kr;if(ze.visibility==="none"||"minzoom"in h&&v<h.minzoom||"maxzoom"in h&&v>=h.maxzoom)continue;const Le=h.filter;if(!Le||ls(Ae,Le,x,v,W)){let re,fe,ke,H,de,b;const Oe=Ce.index;if(B==3&&(h.type=="fill"||h.type=="fill-extrusion"))if(fe=w(h,"paint",h.type+"-opacity",v,x,g,z),h.type+"-pattern"in le){const O=w(h,"paint",h.type+"-pattern",v,x,g,z);if(O){const N=typeof O=="string"?cr(O,Q):O.toString();if(u&&i&&i[N]){++A,b=M[A],(!b||!b.getFill()||b.getStroke()||b.getText())&&(b=new Ne({fill:new xt}),M[A]=b),ke=b.getFill(),b.setZIndex(Oe);const D=N+"."+fe;let U=C[D];if(!U){const $=i[N],F=di($.width,$.height),J=F.getContext("2d");J.globalAlpha=fe,J.drawImage(u,$.x,$.y,$.width,$.height,0,0,$.width,$.height),U=J.createPattern(F,"repeat"),C[D]=U}ke.setColor(U)}}}else re=Se(w(h,"paint",h.type+"-color",v,x,g,z),fe),h.type+"-outline-color"in le&&(de=Se(w(h,"paint",h.type+"-outline-color",v,x,g,z),fe)),de||(de=re),(re||de)&&(++A,b=M[A],(!b||re&&!b.getFill()||!re&&b.getFill()||de&&!b.getStroke()||!de&&b.getStroke()||b.getText())&&(b=new Ne({fill:re?new xt:void 0,stroke:de?new vt:void 0}),M[A]=b),re&&(ke=b.getFill(),ke.setColor(re)),de&&(H=b.getStroke(),H.setColor(de),H.setWidth(.5)),b.setZIndex(Oe));if(B!=1&&h.type=="line"){"line-pattern"in le?re=void 0:re=Se(w(h,"paint","line-color",v,x,g,z),w(h,"paint","line-opacity",v,x,g,z));const O=w(h,"paint","line-width",v,x,g,z);re&&O>0&&(++A,b=M[A],(!b||!b.getStroke()||b.getFill()||b.getText())&&(b=new Ne({stroke:new vt}),M[A]=b),H=b.getStroke(),H.setLineCap(w(h,"layout","line-cap",v,x,g,z)),H.setLineJoin(w(h,"layout","line-join",v,x,g,z)),H.setMiterLimit(w(h,"layout","line-miter-limit",v,x,g,z)),H.setColor(re),H.setWidth(O),H.setLineDash(le["line-dasharray"]?w(h,"paint","line-dasharray",v,x,g,z).map(function(N){return N*O}):null),b.setZIndex(Oe))}let bt=!1,j=null,Qr=0,tt,ne,Xt;if((B==1||B==2)&&"icon-image"in ze){const O=w(h,"layout","icon-image",v,x,g,z);if(O){tt=typeof O=="string"?cr(O,Q):O.toString();let N;const D=s?s(t,tt):void 0;if(u&&i&&i[tt]||D){const U=w(h,"layout","icon-rotation-alignment",v,x,g,z);if(B==2){const $=k.getGeometry();if($.getFlatMidpoint||$.getFlatMidpoints){const F=$.getExtent();if(Math.sqrt(Math.max(Math.pow((F[2]-F[0])/I,2),Math.pow((F[3]-F[1])/I,2)))>150){const Z=$.getType()==="MultiLineString"?$.getFlatMidpoints():$.getFlatMidpoint();if(pr||(Ct=[NaN,NaN],pr=new $i("Point",Ct,[],2,{},void 0)),N=pr,Ct[0]=Z[0],Ct[1]=Z[1],w(h,"layout","symbol-placement",v,x,g,z)==="line"&&U==="map"){const ue=$.getStride(),ie=$.getFlatCoordinates();for(let ae=0,V=ie.length-ue;ae<V;ae+=ue){const he=ie[ae],ye=ie[ae+1],ge=ie[ae+ue],ee=ie[ae+ue+1],ot=Math.min(he,ge),Ti=Math.min(ye,ee),Ei=Math.max(he,ge),Ci=Math.max(ye,ee);if(Z[0]>=ot&&Z[0]<=Ei&&Z[1]>=Ti&&Z[1]<=Ci){Qr=Math.atan2(ye-ee,ge-he);break}}}}}}if(B!==2||N){const $=w(h,"layout","icon-size",v,x,g,z),F=le["icon-color"]!==void 0?w(h,"paint","icon-color",v,x,g,z):null;if(!F||F.a!==0){const J=w(h,"paint","icon-halo-color",v,x,g,z),Z=w(h,"paint","icon-halo-width",v,x,g,z);let me=`${tt}.${$}.${Z}.${J}`;if(F!==null&&(me+=`.${F}`),ne=y[me],!ne){const ue=Cn(h,v,x,"icon",g);let ie;"icon-offset"in ze&&(ie=w(h,"layout","icon-offset",v,x,g,z).slice(0),ie[0]*=$,ie[1]*=-$);let ae=F?[F.r*255,F.g*255,F.b*255,F.a]:void 0;if(D){const V={color:ae,rotateWithView:U==="map",displacement:ie,declutterMode:ue,scale:$};typeof D=="string"?V.src=D:(V.img=D,V.imgSize=[D.width,D.height]),ne=new en(V)}else{const V=i[tt];let he,ye,ge;Z?V.sdf?(he=kn(Tn(u,V,F),{x:0,y:0,width:V.width,height:V.height,pixelRatio:V.pixelRatio},Z,J),ae=void 0):he=kn(u,V,Z,J):(V.sdf?(p||(p=Tn(u,{x:0,y:0,width:l[0],height:l[1]},{r:1,g:1,b:1,a:1})),he=p):he=u,ye=[V.width,V.height],ge=[V.x,V.y]),ne=new en({color:ae,img:he,imgSize:l,size:ye,offset:ge,rotateWithView:U==="map",scale:$/V.pixelRatio,displacement:ie,declutterMode:ue})}y[me]=ne}}ne&&(++A,b=M[A],(!b||!b.getImage()||b.getFill()||b.getStroke())&&(b=new Ne,M[A]=b),b.setGeometry(N),ne.setRotation(Qr+ar(w(h,"layout","icon-rotate",v,x,g,z))),ne.setOpacity(w(h,"paint","icon-opacity",v,x,g,z)),ne.setAnchor(as[w(h,"layout","icon-anchor",v,x,g,z)]),b.setImage(ne),j=b.getText(),b.setText(void 0),b.setZIndex(Oe),bt=!0,Xt=!1)}else Xt=!0}}}if(B==1&&h.type==="circle"){++A,b=M[A],(!b||!b.getImage()||b.getFill()||b.getStroke())&&(b=new Ne,M[A]=b);const O="circle-radius"in le?w(h,"paint","circle-radius",v,x,g,z):5,N=Se(w(h,"paint","circle-stroke-color",v,x,g,z),w(h,"paint","circle-stroke-opacity",v,x,g,z)),D=w(h,"paint","circle-translate",v,x,g,z),U=Se(w(h,"paint","circle-color",v,x,g,z),w(h,"paint","circle-opacity",v,x,g,z)),$=w(h,"paint","circle-stroke-width",v,x,g,z),F=O+"."+N+"."+U+"."+$+"."+D[0]+"."+D[1];ne=y[F],ne||(ne=new Mi({radius:O,displacement:[D[0],-D[1]],stroke:N&&$>0?new vt({width:$,color:N}):void 0,fill:U?new xt({color:U}):void 0,declutterMode:"none"}),y[F]=ne),b.setImage(ne),j=b.getText(),b.setText(void 0),b.setGeometry(void 0),b.setZIndex(Oe),bt=!0}let Y,rt,nt,Me,it,Wt;if("text-field"in ze){Me=Math.round(w(h,"layout","text-size",v,x,g,z));const O=w(h,"layout","text-font",v,x,g,z);nt=w(h,"layout","text-line-height",v,x,g,z),rt=xr(a?a(O,e.metadata?e.metadata["ol:webfonts"]:void 0):O,Me,nt),rt.includes("sans-serif")||(rt+=",sans-serif"),it=w(h,"layout","text-letter-spacing",v,x,g,z),Wt=w(h,"layout","text-max-width",v,x,g,z);const N=w(h,"layout","text-field",v,x,g,z);typeof N=="object"&&N.sections?N.sections.length===1?Y=N.toString():Y=N.sections.reduce((D,U,$)=>{const F=U.fontStack?U.fontStack.split(","):O,J=xr(a?a(F):F,Me*(U.scale||1),nt);let Z=U.text;if(Z===`
`)return D.push(`
`,""),D;if(B==2){D.push(wr(Z,it),J);return}Z=zr(Z,J,Wt,it).split(`
`);for(let me=0,ue=Z.length;me<ue;++me)me>0&&D.push(`
`,""),D.push(Z[me],J);return D},[]):Y=cr(N,Q).trim(),fe=w(h,"paint","text-opacity",v,x,g,z)}if(Y&&fe&&!Xt){bt||(++A,b=M[A],(!b||!b.getText()||b.getFill()||b.getStroke())&&(b=new Ne,M[A]=b),b.setImage(void 0),b.setGeometry(void 0));const O=Cn(h,v,x,"text",g);b.getText()||b.setText(j),j=b.getText(),(!j||"getDeclutterMode"in j&&j.getDeclutterMode()!==O)&&(j=new Si({padding:[2,2,2,2],declutterMode:O}),b.setText(j));const N=w(h,"layout","text-transform",v,x,g,z);N=="uppercase"?Y=Array.isArray(Y)?Y.map((ee,ot)=>ot%2?ee:ee.toUpperCase()):Y.toUpperCase():N=="lowercase"&&(Y=Array.isArray(Y)?Y.map((ee,ot)=>ot%2?ee:ee.toLowerCase()):Y.toLowerCase());const D=Array.isArray(Y)?Y:B==2?wr(Y,it):zr(Y,rt,Wt,it);j.setText(D),j.setFont(rt),j.setRotation(ar(w(h,"layout","text-rotate",v,x,g,z)));const U=w(h,"layout","text-anchor",v,x,g,z),$=bt||B==1?"point":w(h,"layout","symbol-placement",v,x,g,z);let F;if($==="line-center"?(j.setPlacement("line"),F="center"):j.setPlacement($),$==="line"&&typeof j.setRepeat=="function"){const ee=w(h,"layout","symbol-spacing",v,x,g,z);j.setRepeat(ee*2)}j.setOverflow($==="point");let J=w(h,"paint","text-halo-width",v,x,g,z);const Z=w(h,"layout","text-offset",v,x,g,z),me=w(h,"paint","text-translate",v,x,g,z);let ue=0,ie=0;if($=="point"){F="center",U.indexOf("left")!==-1?(F="left",ie=J):U.indexOf("right")!==-1&&(F="right",ie=-J);const ee=w(h,"layout","text-rotation-alignment",v,x,g,z);j.setRotateWithView(ee=="map")}else j.setMaxAngle(ar(w(h,"layout","text-max-angle",v,x,g,z))*Y.length/D.length),j.setRotateWithView(!1);j.setTextAlign(F);let ae="middle";U.indexOf("bottom")==0?(ae="bottom",ue=-J-.5*(nt-1)*Me):U.indexOf("top")==0&&(ae="top",ue=J+.5*(nt-1)*Me),j.setTextBaseline(ae);const V=w(h,"layout","text-justify",v,x,g,z);j.setJustify(V==="auto"?void 0:V),j.setOffsetX(Z[0]*Me+ie+me[0]),j.setOffsetY(Z[1]*Me+ue+me[1]),P.setColor(Se(w(h,"paint","text-color",v,x,g,z),fe)),j.setFill(P);const he=Se(w(h,"paint","text-halo-color",v,x,g,z),fe);if(he&&J>0){ve.setColor(he),J*=2;const ee=.5*Me;ve.setWidth(J<=ee?J:ee),j.setStroke(ve)}else j.setStroke(void 0);const ye=w(h,"layout","text-padding",v,x,g,z),ge=j.getPadding();ye!==ge[0]&&(ge[0]=ye,ge[1]=ye,ge[2]=ye,ge[3]=ye),b.setZIndex(Oe)}}}if(A>-1)return M.length=A+1,M};return t.setStyle(q),t.set("mapbox-source",G),t.set("mapbox-layers",d),t.set("mapbox-featurestate",t.get("mapbox-featurestate")||{}),q}function fs(t,e){const r=t[0],n=r.width,i=r.height,o=r.data,a=new Uint8ClampedArray(o.length),s=e.resolution*2,u=n-1,l=i-1,p=[0,0,0,0],c=2*Math.PI,f=Math.PI/2,d=Math.PI*e.sunEl/180,y=Math.PI*e.sunAz/180,C=Math.cos(d),g=Math.sin(d),W=e.highlightColor,G=e.shadowColor,ve=e.accentColor,P=e.encoding;let M,q,k,I,R,Q,_,v,B,x,z,A,te,qe,Ce,h,Ae,ze,le,Le,re,fe;function ke(H,de="mapbox"){if(de==="mapbox")return(H[0]*256*256+H[1]*256+H[2])*.1-1e4;if(de==="terrarium")return H[0]*256+H[1]+H[2]/256-32768}for(q=0;q<=l;++q)for(R=q===0?0:q-1,Q=q===l?l:q+1,M=0;M<=u;++M)k=M===0?0:M-1,I=M===u?u:M+1,_=(q*n+k)*4,p[0]=o[_],p[1]=o[_+1],p[2]=o[_+2],p[3]=o[_+3],v=e.vert*ke(p,P),_=(q*n+I)*4,p[0]=o[_],p[1]=o[_+1],p[2]=o[_+2],p[3]=o[_+3],B=e.vert*ke(p,P),x=(B-v)/s,_=(R*n+M)*4,p[0]=o[_],p[1]=o[_+1],p[2]=o[_+2],p[3]=o[_+3],v=e.vert*ke(p,P),_=(Q*n+M)*4,p[0]=o[_],p[1]=o[_+1],p[2]=o[_+2],p[3]=o[_+3],B=e.vert*ke(p,P),z=(B-v)/s,te=Math.atan2(z,-x),te<0?te=f-te:te>f?te=c-te+f:te=f-te,A=Math.atan(Math.sqrt(x*x+z*z)),fe=g*Math.cos(A)+C*Math.sin(A)*Math.cos(y-te),qe=Math.cos(A),Ce=255*fe,le=Math.min(Math.max(2*e.sunEl,0),1),Le=1.875-e.opacity*1.75,re=e.opacity!==.5?f*((Math.pow(Le,A)-1)/(Math.pow(Le,f)-1)):A,Ae={r:(1-qe)*ve.r*le*255,g:(1-qe)*ve.g*le*255,b:(1-qe)*ve.b*le*255,a:(1-qe)*ve.a*le*255},h=Math.abs(((te+y)/Math.PI+.5)%2-1),ze={r:(W.r*(1-h)+G.r*h)*Ce,g:(W.g*(1-h)+G.g*h)*Ce,b:(W.b*(1-h)+G.b*h)*Ce,a:(W.a*(1-h)+G.a*h)*Ce},_=(q*n+M)*4,a[_]=Ae.r*(1-h)+ze.r,a[_+1]=Ae.g*(1-h)+ze.g,a[_+2]=Ae.b*(1-h)+ze.b,a[_+3]=o[_+3]*e.opacity*le*Math.sin(re);return new ImageData(a,n,i)}function ds(t,e=512){return t.getExtent()?$n({extent:t.getExtent(),tileSize:e,maxZoom:22}).getResolutions():Fe}function gi(t,e){return e.accessToken||(e=Object.assign({},e),new URL(t).searchParams.forEach((n,i)=>{e.accessToken=n,e.accessTokenParam=i})),e}function ms(t,e,r="",n={},i=void 0){let o,a,s,u,l=!0;return typeof r!="string"&&!Array.isArray(r)?(s=r,u=s.source||s.layers,n=s):u=r,typeof n=="string"?(o=n,s={}):(o=n.styleUrl,s=n),s.updateSource===!1&&(l=!1),i||(i=s.resolutions),!o&&typeof e=="string"&&!e.trim().startsWith("{")&&(o=e),o&&(o=o.startsWith("data:")?location.href:Rt(o,s.accessToken),s=gi(o,s)),new Promise(function(p,c){mi(e,s).then(function(f){if(f.version!=8)return c(new Error("glStyle version 8 required."));if(!(t instanceof Ot||t instanceof pt))return c(new Error("Can only apply to VectorLayer or VectorTileLayer"));const d=t instanceof pt?"vector":"geojson";if(u?Array.isArray(u)?a=f.layers.find(function(P){return P.id===u[0]}).source:a=u:(a=Object.keys(f.sources).find(function(P){return f.sources[P].type===d}),u=a),!a)return c(new Error(`No ${d} source found in the glStyle.`));function y(){if(!l)return Promise.resolve();if(t instanceof pt)return xi(f.sources[a],o,s).then(function(k){const I=t.getSource();if(I?k!==I&&(I.setTileUrlFunction(k.getTileUrlFunction()),typeof I.setUrls=="function"&&typeof k.getUrls=="function"&&I.setUrls(k.getUrls()),I.format_||(I.format_=k.format_),I.getAttributions()||I.setAttributions(k.getAttributions()),I.getTileLoadFunction()===eo&&I.setTileLoadFunction(k.getTileLoadFunction()),Ri(I.getProjection(),k.getProjection())&&(I.tileGrid=k.getTileGrid())):t.setSource(k),!isFinite(t.getMaxResolution())&&!isFinite(t.getMinZoom())){const R=t.getSource().getTileGrid();t.setMaxResolution(R.getResolution(R.getMinZoom()))}});const P=f.sources[a];let M=t.getSource();(!M||M.get("mapbox-source")!==P)&&(M=ki(P,o,s));const q=t.getSource();return q?M!==q&&(q.getAttributions()||q.setAttributions(M.getAttributions()),q.format_||(q.format_=M.getFormat()),q.url_=M.getUrl()):t.setSource(M),Promise.resolve()}let C,g,W,G;function ve(){if(!G&&(!f.sprite||g)){if(s.projection&&!i){const M=_e(s.projection).getUnits();M!=="m"&&(i=Fe.map(q=>q/fr[M]))}G=cs(t,f,u,i,g,W,is,s.getImage),t.getStyle()?y().then(p).catch(c):c(new Error(`Nothing to show for source [${a}]`))}else G?(t.setStyle(G),y().then(p).catch(c)):c(new Error("Something went wrong trying to apply style."))}if(f.sprite){const P=new URL(Wa(f.sprite,s.accessToken,o||location.href));C=window.devicePixelRatio>=1.5?.5:1;const M=C==.5?"@2x":"";let q=P.origin+P.pathname+M+".json"+P.search;new Promise(function(k,I){He("Sprite",q,s).then(k).catch(function(R){q=P.origin+P.pathname+".json"+P.search,He("Sprite",q,s).then(k).catch(I)})}).then(function(k){if(k===void 0&&c(new Error("No sprites found.")),g=k,W=P.origin+P.pathname+M+".png"+P.search,s.transformRequest){const I=s.transformRequest(W,"SpriteImage")||W;(I instanceof Request||I instanceof Promise)&&(W=I)}ve()}).catch(function(k){c(new Error(`Sprites cannot be loaded: ${q}: ${k.message}`))})}else ve()}).catch(c)})}const Ie={};function bi(t,e){let r;return t.some(function(n){if(n.id==e)return r=n.source,!0}),r}function hs(t,e){const r=t.bounds;if(r){const n=dr([r[0],r[1]],e),i=dr([r[2],r[3]],e);return[n[0],n[1],i[0],i[1]]}return _e(e).getExtent()}function vi(t,e,r){const n=new jn({tileJSON:e,tileSize:t.tileSize||e.tileSize||512}),i=n.getTileJSON(),o=n.getTileGrid(),a=_e(r.projection||"EPSG:3857"),s=hs(i,a),u=a.getExtent(),l=i.minzoom||0,p=i.maxzoom||22,c={attributions:n.getAttributions(),projection:a,tileGrid:new _n({origin:u?Li(u):o.getOrigin(0),extent:s||o.getExtent(),minZoom:l,resolutions:ds(a,e.tileSize).slice(0,p+1),tileSize:o.getTileSize(0)})};return Array.isArray(i.tiles)?c.urls=i.tiles:c.url=i.tiles,c}function ys(t,e,r,n){const i={id:t.id,type:t.type},o=t.layout||{},a=t.paint||{};i.paint=a;const s=Kr(e,r.resolutions||Fe);let u;const l=w(i,"paint","background-color",s,Ie,n);return a["background-opacity"]!==void 0&&(u=w(i,"paint","background-opacity",s,Ie,n)),o.visibility=="none"?void 0:Se(l,u)}function gs(t,e,r){const n=document.createElement("div");return n.className="ol-mapbox-style-background",n.style.position="absolute",n.style.width="100%",n.style.height="100%",new qi({source:new Ai({}),render(i){const o=ys(t,i.viewState.resolution,e,r);return n.style.backgroundColor=o,n}})}function xi(t,e,r){return new Promise(function(n,i){hi(t,e,r).then(function({tileJson:o,tileLoadFunction:a}){const s=vi(t,o,r);s.tileLoadFunction=a,s.format=new Ii,n(new Fn(s))}).catch(i)})}function bs(t,e,r){const n=new pt({declutter:!0,visible:!1});return xi(t,e,r).then(function(i){i.set("mapbox-source",t),n.setSource(i)}).catch(function(i){n.setSource(void 0)}),n}function wi(t){return`{bbox-${(t?t.getCode():"EPSG:3857").toLowerCase().replace(/[^a-z0-9]/g,"-")}}`}function vs(t,e,r){return new Promise(function(n,i){hi(t,e,r).then(function({tileJson:o,tileLoadFunction:a}){const s=new jn({interpolate:r.interpolate===void 0?!0:r.interpolate,transition:0,crossOrigin:"anonymous",tileJSON:o});s.tileGrid=vi(t,o,r).tileGrid,r.projection&&(s.projection=_e(r.projection));const u=s.getTileUrlFunction();a&&s.setTileLoadFunction(a),s.setTileUrlFunction(function(l,p,c){const f=wi(c);let d=u(l,p,c);if(d.indexOf(f)!=-1){const y=s.getTileGrid().getTileCoordExtent(l);d=d.replace(f,y.toString())}return d}),s.set("mapbox-source",t),n(s)}).catch(function(o){i(o)})})}function zi(t,e,r){const n=new Yi;return vs(t,e,r).then(function(i){n.setSource(i)}).catch(function(){n.setSource(void 0)}),n}function xs(t,e,r){const n=zi(t,e,r);return new Bi({source:new Xi({operationType:"image",operation:fs,sources:[n]})})}function ki(t,e,r){const n=r.projection?new rn({dataProjection:r.projection}):new rn,i=t.data,o={};if(typeof i=="string"){const s=St(i,r.accessToken,r.accessTokenParam||"access_token",e||location.href);if(/\{bbox-[0-9a-z-]+\}/.test(s)){const l=(c,f,d)=>{const y=wi(d);return s.replace(y,`${c.join(",")}`)},p=new ut({attributions:t.attribution,format:n,loader:(c,f,d,y,C)=>{const g=typeof l=="function"?l(c,f,d):l;He("GeoJSON",g,r).then(W=>{const G=p.getFormat().readFeatures(W,{featureProjection:d});p.addFeatures(G),y(G)}).catch(W=>{p.removeLoadedExtent(c),C()})},strategy:Ki});return p.set("mapbox-source",t),p}const u=new ut({attributions:t.attribution,format:n,url:s,loader:(l,p,c,f,d)=>{He("GeoJSON",s,r).then(y=>{const C=u.getFormat().readFeatures(y,{featureProjection:c});u.addFeatures(C),f(C)}).catch(y=>{u.removeLoadedExtent(l),d()})}});return u}o.features=n.readFeatures(i,{featureProjection:"EPSG:3857"});const a=new ut(Object.assign({attributions:t.attribution,format:n},o));return a.set("mapbox-source",t),a}function ws(t,e,r){return new Ot({declutter:!0,source:ki(t,e,r),visible:!1})}function zs(t,e,r){let n=null;return function(i){t.paint&&"raster-opacity"in t.paint&&i.frameState.viewState.zoom!==n&&(n=i.frameState.viewState.zoom,delete r[t.id],ks(t,e,n,r))}}function ks(t,e,r,n){const i=w(t,"paint","raster-opacity",r,Ie,n);e.setOpacity(i)}function Ts(t,e){function r(){const n=e.get("mapbox-style");if(!n)return;const i=pi(n.layers),o=t.get("mapbox-layers"),a=i.filter(function(s){return o.includes(s.id)}).some(function(s){return!s.layout||!s.layout.visibility||s.layout.visibility==="visible"});t.get("visible")!==a&&t.setVisible(a)}t.on("change",r),r()}function Es(t,e,r,n){const i=fi(t),o=t.layers,a=r.type,s=r.source||bi(o,r.ref),u=t.sources[s];let l;if(a=="background")l=gs(r,n,i);else if(u.type=="vector")l=bs(u,e,n);else if(u.type=="raster")l=zi(u,e,n),l.setVisible(r.layout?r.layout.visibility!=="none":!0),l.on("prerender",zs(r,l,i));else if(u.type=="geojson")l=ws(u,e,n);else if(u.type=="raster-dem"&&r.type=="hillshade"){const c=xs(u,e,n);l=c,c.getSource().on("beforeoperations",function(f){const d=f.data;d.resolution=f.resolution;const y=Kr(f.resolution,n.resolutions||Fe);d.encoding=u.encoding,d.vert=5*w(r,"paint","hillshade-exaggeration",y,Ie,i),d.sunAz=w(r,"paint","hillshade-illumination-direction",y,Ie,i),d.sunEl=35,d.opacity=.3,d.highlightColor=w(r,"paint","hillshade-highlight-color",y,Ie,i),d.shadowColor=w(r,"paint","hillshade-shadow-color",y,Ie,i),d.accentColor=w(r,"paint","hillshade-accent-color",y,Ie,i)}),l.setVisible(r.layout?r.layout.visibility!=="none":!0)}const p=s;return l&&l.set("mapbox-source",p),l}function Mn(t,e,r,n){const i=[];let o=null;if(e instanceof Tr){if(o=e.getView(),!o.isDef()&&!o.getRotation()&&!o.getResolutions()){const c=n.projection?_e(n.projection):o.getProjection();o=new In(Object.assign(o.getProperties(),{maxResolution:Fe[0]/fr[c.getUnits()],projection:n.projection||o.getProjection()})),e.setView(o)}"center"in t&&!o.getCenter()&&o.setCenter(dr(t.center,o.getProjection())),"zoom"in t&&o.getZoom()===void 0&&o.setResolution(Fe[0]/fr[o.getProjection().getUnits()]/Math.pow(2,t.zoom)),(!o.getCenter()||o.getZoom()===void 0)&&o.fit(o.getProjection().getExtent(),{nearest:!0,size:e.getSize()})}e.set("mapbox-style",t),e.set("mapbox-metadata",{styleUrl:r,options:n});const a=t.layers;let s=[],u,l,p;for(let c=0,f=a.length;c<f;++c){const d=a[c],y=d.type;if(y=="heatmap"){console.debug(`layers[${c}].type "${y}" not supported`);continue}else p=d.source||bi(a,d.ref),(!p||p!=l)&&(s.length&&(i.push(Sn(u,s,t,r,e,n)),s=[]),u=Es(t,r,d,n),u instanceof Ot||u instanceof pt||(s=[]),l=u.get("mapbox-source")),s.push(d.id)}return i.push(Sn(u,s,t,r,e,n)),Promise.all(i)}function Cs(t,e,r={}){let n,i;if(typeof t=="string"||t instanceof HTMLElement?i=new Tr({target:t}):i=t,typeof e=="string"){const o=e.startsWith("data:")?location.href:Rt(e,r.accessToken);r=gi(o,r),n=new Promise(function(a,s){mi(e,r).then(function(u){Mn(u,i,o,r).then(function(){a(i)}).catch(s)}).catch(function(u){s(new Error(`Could not load ${e}: ${u.message}`))})})}else n=new Promise(function(o,a){Mn(e,i,!r.styleUrl||r.styleUrl.startsWith("data:")?location.href:Rt(r.styleUrl,r.accessToken),r).then(function(){o(i)}).catch(a)});return n}function Sn(t,e,r,n,i,o={}){let a=24,s=0;const u=r.layers;for(let l=0,p=u.length;l<p;++l){const c=u[l];e.indexOf(c.id)!==-1&&(a=Math.min("minzoom"in c?c.minzoom:0,a),s=Math.max("maxzoom"in c?c.maxzoom:24,s))}return new Promise(function(l,p){const c=function(){const d=t.getSource();if(!d||d.getState()==="error"){p(new Error("Error accessing data for source "+t.get("mapbox-source")));return}if("getTileGrid"in d){const y=d.getTileGrid();if(y){const C=y.getMinZoom();(a>0||C>0)&&t.setMaxResolution(Math.min(sr.getResolution(a),y.getResolution(C))+1e-9),s<24&&t.setMinResolution(sr.getResolution(s)+1e-9)}}else a>0&&t.setMaxResolution(sr.getResolution(a)+1e-9);d instanceof ut||d instanceof Fn?ms(t,r,e,Object.assign({styleUrl:n},o)).then(function(){Ts(t,i),l()}).catch(p):l()};t.set("mapbox-layers",e);const f=i.getLayers();f.getArray().indexOf(t)===-1&&f.push(t),t.getSource()?c():t.once("change:source",c)})}const et=t=>(so("data-v-49488f9d"),t=t(),lo(),t),Ms={id:"title"},Ss=et(()=>oe("div",{id:"map",class:"map"},null,-1)),Is=et(()=>oe("p",null,"This shows how to specify when vector(tile) layers are decluttered if declutter is set to true. By default, all decluttering will happen after all layers have been rendered. Calling the map's flushDeclutter() method makes decluttering occur immediately. This is useful for layers that need to be entirely rendered above the declutter items of layers lower in the layer stack. In the example, the blue square overlay displays above the decluttered vector symbols and labels.",-1)),$s=et(()=>oe("h5",{class:"source-heading"},"html",-1)),_s={class:"language-html"},Fs=et(()=>oe("h5",{class:"source-heading"},"css",-1)),js={class:"language-css"},qs=et(()=>oe("h5",{class:"source-heading"},"js",-1)),As={class:"language-js"},Ps=et(()=>oe("h5",{class:"source-heading"},"package.json",-1)),Ds={class:"language-json"},Rs={__name:"index",setup(t){return no(()=>{const e=[-12e6,35e5,-1e7,55e5],r=new Ot({source:new ut({features:[new Qi(Ni(e))]}),style:{"stroke-color":"rgba(180, 180, 255, 1)","stroke-width":1,"fill-color":"rgba(200, 200, 255, 0.85)"}}),n=new Ui;Cs(n,"https://api.maptiler.com/maps/topo-v2/style.json?key=UvzNAwhugDuwndyxsHmE");const i=new Tr({target:"map",view:new In({center:Vi(e),zoom:4}),layers:[n,r]});r.on("prerender",()=>i.flushDeclutterItems()),Prism.highlightAll()}),(e,r)=>(io(),oo(ao,null,[oe("h4",Ms,at(st(po)),1),Ss,Is,$s,oe("pre",null,[oe("code",_s,at("  "+st(co).trim()),1)]),Fs,oe("pre",null,[oe("code",js,at("  "+st(fo).trim()),1)]),qs,oe("pre",null,[oe("code",As,at("  "+st(mo).trim()),1)]),Ps,oe("pre",null,[oe("code",Ds,at("  "+st(ho).trim()),1)])],64))}},al=ro(Rs,[["__scopeId","data-v-49488f9d"]]);export{al as default};
