import{ba as C,aO as c,bb as u,by as g,bf as p,P as d,bz as y,d as P}from"./Layer-227d2e40.js";class l extends C{constructor(t,s){super(),s&&!Array.isArray(t[0])?this.setFlatCoordinates(s,t):this.setCoordinates(t,s)}appendPoint(t){this.flatCoordinates?c(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()}clone(){const t=new l(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t}closestPointXY(t,s,n,e){if(e<u(this.getExtent(),t,s))return e;const i=this.flatCoordinates,r=this.stride;for(let o=0,f=i.length;o<f;o+=r){const h=g(t,s,i[o],i[o+1]);if(h<e){e=h;for(let a=0;a<r;++a)n[a]=i[o+a];n.length=r}}return e}getCoordinates(){return p(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(t){const s=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||s<=t?null:new d(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)}getPoints(){const t=this.flatCoordinates,s=this.layout,n=this.stride,e=[];for(let i=0,r=t.length;i<r;i+=n){const o=new d(t.slice(i,i+n),s);e.push(o)}return e}getType(){return"MultiPoint"}intersectsExtent(t){const s=this.flatCoordinates,n=this.stride;for(let e=0,i=s.length;e<i;e+=n){const r=s[e],o=s[e+1];if(y(t,r,o))return!0}return!1}setCoordinates(t,s){this.setLayout(s,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=P(this.flatCoordinates,0,t,this.stride),this.changed()}}const w=l;export{w as M};
