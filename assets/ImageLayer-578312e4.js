import{ci as X,b7 as d,X as Y,ag as b,b1 as j,cd as z,ad as F,ae as U,t as N,af as k,ai as H,ak as $,aj as B,j as S,c as V}from"./Layer-d95863ce.js";import{C as q}from"./Layer-4850cb8d.js";function tt(m){return Array.isArray(m)?Math.min(...m):m}class J extends X{constructor(t,l,c,s,i){const n=i!==void 0?d.IDLE:d.LOADED;super(t,l,c,n),this.loader_=i!==void 0?i:null,this.canvas_=s,this.error_=null}getError(){return this.error_}handleLoad_(t){t?(this.error_=t,this.state=d.ERROR):this.state=d.LOADED,this.changed()}load(){this.state==d.IDLE&&(this.state=d.LOADING,this.changed(),this.loader_(this.handleLoad_.bind(this)))}getImage(){return this.canvas_}}const et=J;class K extends q{constructor(t){super(t),this.image_=null}getImage(){return this.image_?this.image_.getImage():null}prepareFrame(t){const l=t.layerStatesArray[t.layerIndex],c=t.pixelRatio,s=t.viewState,i=s.resolution,n=this.getLayer().getSource(),a=t.viewHints;let o=t.extent;if(l.extent!==void 0&&(o=Y(o,b(l.extent,s.projection))),!a[j.ANIMATING]&&!a[j.INTERACTING]&&!z(o))if(n){const h=s.projection,e=n.getImage(o,i,c,h);e&&(this.loadImage(e)?this.image_=e:e.getState()===d.EMPTY&&(this.image_=null))}else this.image_=null;return!!this.image_}getData(t){const l=this.frameState;if(!l)return null;const c=this.getLayer(),s=F(l.pixelToCoordinateTransform,t.slice()),i=c.getExtent();if(i&&!U(i,s))return null;const n=this.image_.getExtent(),a=this.image_.getImage(),o=N(n),h=Math.floor(a.width*((s[0]-n[0])/o));if(h<0||h>=a.width)return null;const e=k(n),g=Math.floor(a.height*((n[3]-s[1])/e));return g<0||g>=a.height?null:this.getImageData(a,h,g)}renderFrame(t,l){const c=this.image_,s=c.getExtent(),i=c.getResolution(),[n,a]=Array.isArray(i)?i:[i,i],o=c.getPixelRatio(),h=t.layerStatesArray[t.layerIndex],e=t.pixelRatio,g=t.viewState,_=g.center,A=g.resolution,O=e*n/(A*o),P=e*a/(A*o),L=t.extent,C=g.resolution,G=g.rotation,p=Math.round(N(L)/C*e),x=Math.round(k(L)/C*e);H(this.pixelTransform,t.size[0]/2,t.size[1]/2,1/e,1/e,G,-p/2,-x/2),$(this.inversePixelTransform,this.pixelTransform);const R=B(this.pixelTransform);this.useContainer(l,R,this.getBackground(t));const r=this.context,u=r.canvas;u.width!=p||u.height!=x?(u.width=p,u.height=x):this.containerReused||r.clearRect(0,0,p,x);let v=!1,E=!0;if(h.extent){const y=b(h.extent,g.projection);E=S(y,t.extent),v=E&&!V(y,t.extent),v&&this.clipUnrotated(r,t,y)}const f=c.getImage(),I=H(this.tempTransform,p/2,x/2,O,P,0,o*(s[0]-_[0])/n,o*(_[1]-s[3])/a);this.renderedResolution=a*e/o;const T=f.width*I[0],D=f.height*I[3];if(this.getLayer().getSource().getInterpolate()||(r.imageSmoothingEnabled=!1),this.preRender(r,t),E&&T>=.5&&D>=.5){const y=I[4],W=I[5],w=h.opacity;let M;w!==1&&(M=r.globalAlpha,r.globalAlpha=w),r.drawImage(f,0,0,+f.width,+f.height,y,W,T,D),w!==1&&(r.globalAlpha=M)}return this.postRender(r,t),v&&r.restore(),r.imageSmoothingEnabled=!0,R!==u.style.transform&&(u.style.transform=R),this.container}}const it=K;export{it as C,et as I,tt as f};
