import{l as v,L as _,i as A}from"./LineString-72752817.js";import{ba as m,aO as g,bb as F,bi as M,bj as b,bk as L,bl as E,bm as S,bn as w,aL as I,W as x,bo as D,bp as O,bq as X,br as Y,bs as y,bt as j,aN as q,bu as G,bv as $,a as p,bw as k,bx as T}from"./Layer-227d2e40.js";import{M as z}from"./MultiPoint-97d710ff.js";class C extends m{constructor(t,s,e){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(t[0]))this.setCoordinates(t,s);else if(s!==void 0&&e)this.setFlatCoordinates(s,t),this.ends_=e;else{let i=this.getLayout();const n=t,o=[],a=[];for(let r=0,l=n.length;r<l;++r){const h=n[r];r===0&&(i=h.getLayout()),g(o,h.getFlatCoordinates()),a.push(o.length)}this.setFlatCoordinates(i,o),this.ends_=a}}appendLineString(t){this.flatCoordinates?g(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const t=new C(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t}closestPointXY(t,s,e,i){return i<F(this.getExtent(),t,s)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(M(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),b(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,s,e,i))}getCoordinateAtM(t,s,e){return this.layout!="XYM"&&this.layout!="XYZM"||this.flatCoordinates.length===0?null:(s=s!==void 0?s:!1,e=e!==void 0?e:!1,v(this.flatCoordinates,0,this.ends_,this.stride,t,s,e))}getCoordinates(){return L(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(t){return t<0||this.ends_.length<=t?null:new _(this.flatCoordinates.slice(t===0?0:this.ends_[t-1],this.ends_[t]),this.layout)}getLineStrings(){const t=this.flatCoordinates,s=this.ends_,e=this.layout,i=[];let n=0;for(let o=0,a=s.length;o<a;++o){const r=s[o],l=new _(t.slice(n,r),e);i.push(l),n=r}return i}getFlatMidpoints(){const t=[],s=this.flatCoordinates;let e=0;const i=this.ends_,n=this.stride;for(let o=0,a=i.length;o<a;++o){const r=i[o],l=A(s,e,r,n,.5);g(t,l),e=r}return t}getSimplifiedGeometryInternal(t){const s=[],e=[];return s.length=E(this.flatCoordinates,0,this.ends_,this.stride,t,s,0,e),new C(s,"XY",e)}getType(){return"MultiLineString"}intersectsExtent(t){return S(this.flatCoordinates,0,this.ends_,this.stride,t)}setCoordinates(t,s){this.setLayout(s,t,2),this.flatCoordinates||(this.flatCoordinates=[]);const e=w(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=e.length===0?0:e[e.length-1],this.changed()}}const B=C;function N(R,t,s,e){const i=[];let n=x();for(let o=0,a=s.length;o<a;++o){const r=s[o];n=I(R,t,r[0],e),i.push((n[0]+n[2])/2,(n[1]+n[3])/2),t=r[r.length-1]}return i}class u extends m{constructor(t,s,e){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!e&&!Array.isArray(t[0])){let i=this.getLayout();const n=t,o=[],a=[];for(let r=0,l=n.length;r<l;++r){const h=n[r];r===0&&(i=h.getLayout());const d=o.length,f=h.getEnds();for(let c=0,P=f.length;c<P;++c)f[c]+=d;g(o,h.getFlatCoordinates()),a.push(f)}s=i,t=o,e=a}s!==void 0&&e?(this.setFlatCoordinates(s,t),this.endss_=e):this.setCoordinates(t,s)}appendPolygon(t){let s;if(!this.flatCoordinates)this.flatCoordinates=t.getFlatCoordinates().slice(),s=t.getEnds().slice(),this.endss_.push();else{const e=this.flatCoordinates.length;g(this.flatCoordinates,t.getFlatCoordinates()),s=t.getEnds().slice();for(let i=0,n=s.length;i<n;++i)s[i]+=e}this.endss_.push(s),this.changed()}clone(){const t=this.endss_.length,s=new Array(t);for(let i=0;i<t;++i)s[i]=this.endss_[i].slice();const e=new u(this.flatCoordinates.slice(),this.layout,s);return e.applyProperties(this),e}closestPointXY(t,s,e,i){return i<F(this.getExtent(),t,s)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(D(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),O(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,s,e,i))}containsXY(t,s){return X(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,s)}getArea(){return Y(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(t){let s;return t!==void 0?(s=this.getOrientedFlatCoordinates().slice(),y(s,0,this.endss_,this.stride,t)):s=this.flatCoordinates,j(s,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const t=N(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=q(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new z(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const t=this.flatCoordinates;G(t,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=y(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(t){const s=[],e=[];return s.length=$(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),s,0,e),new u(s,"XY",e)}getPolygon(t){if(t<0||this.endss_.length<=t)return null;let s;if(t===0)s=0;else{const n=this.endss_[t-1];s=n[n.length-1]}const e=this.endss_[t].slice(),i=e[e.length-1];if(s!==0)for(let n=0,o=e.length;n<o;++n)e[n]-=s;return new p(this.flatCoordinates.slice(s,i),this.layout,e)}getPolygons(){const t=this.layout,s=this.flatCoordinates,e=this.endss_,i=[];let n=0;for(let o=0,a=e.length;o<a;++o){const r=e[o].slice(),l=r[r.length-1];if(n!==0)for(let d=0,f=r.length;d<f;++d)r[d]-=n;const h=new p(s.slice(n,l),t,r);i.push(h),n=l}return i}getType(){return"MultiPolygon"}intersectsExtent(t){return k(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)}setCoordinates(t,s){this.setLayout(s,t,3),this.flatCoordinates||(this.flatCoordinates=[]);const e=T(this.flatCoordinates,0,t,this.stride,this.endss_);if(e.length===0)this.flatCoordinates.length=0;else{const i=e[e.length-1];this.flatCoordinates.length=i.length===0?0:i[i.length-1]}this.changed()}}const H=u;export{B as M,H as a,N as l};
